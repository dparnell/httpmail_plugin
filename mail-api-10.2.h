/*
 *     Generated by class-dump (version 2.1.5).
 *
 *     class-dump is Copyright (C) 1997, 1999, 2000, 2001 by Steve Nygard.
 */

/*
 * File: /System/Library/Frameworks/Message.framework/
 */
 
#import <cocoa/cocoa.h>
#import <AddressBook/AddressBook.h>

 @class MailboxUid;
 @class MailAccount;
 @class MboxIndex;
 @class ObjectCache;
 @class TableOfContents;
 @class MessageHeaders;
 @class MimePart;
 @class Message;
 @class IMAPOperationCache;
 @class ActivityMonitor;
 @class DeliveryAccount;
 @class SMTPConnection;
 @class AuthScheme;
 @class _NSSocket;
 @class ABAddressBook;
 @class ABRecord;
 @class _OutgoingMessageBody;
 @class IMAPConnection;
 @class Connection;

@protocol SASLSecurityLayer <NSObject>
- createEncryptedDataForBytes:(const STR)fp12 length:(unsigned int)fp16 errorMessage:(id *)fp20;
- createDecryptedDataForBytes:(const STR)fp12 length:(unsigned int)fp16 errorMessage:(id *)fp20;
- (unsigned int)encryptionBufferSize;
@end

/*
@interface Connection
- _nssocket;
@end
*/

@interface Connection:NSObject
{
    id _securityLayer;
    _NSSocket *_socket;
    STR _buffer;
    int _bufferRemainingBytes;
    unsigned int _bufferStart;
    unsigned int _bufferLength;
    NSData *_logData;
}

+ (void)initialize;
- (void)dealloc;
- (BOOL)connectUsingAccount:fp12 errorMessage:(id *)fp16;
- (char)authenticateUsingAccount:fp12 errorMessage:(id *)fp16;
- capabilities;
- authenticationMechanisms;
- (char)writeData:fp12 dontLogBytesInRange:(struct _NSRange)fp16 errorMessage:(id *)fp24;
- (char)writeData:fp12 errorMessage:(id *)fp16;
- (char)readLineIntoData:fp12 errorMessage:(id *)fp16;
- (char)readBytesIntoData:fp12 desiredLength:(unsigned int)fp16 errorMessage:(id *)fp20;
- (char)authenticateUsingAccount:fp12 authenticator:fp16 errorMessage:(id *)fp20;
- (char)startTLSForAccount:fp12 errorMessage:(id *)fp16;
- (void)disconnect;
- (void *)_socket;

@end


@interface NSPrivateMessageClassForFindingBundle:NSObject
{
}


@end

@interface MessageStore:NSObject
{
    int _flags;
    MailboxUid *_mailboxUid;
    MailAccount *_account;
    MboxIndex *_index;
    NSMutableArray *_allMessages;
    NSMutableArray *_messagesToBeAddedToIndex;
    NSMutableArray *_messagesToBeRemovedFromIndex;
    unsigned int _allMessagesSize;
    unsigned int _deletedMessagesSize;
    unsigned int _deletedMessageCount;
    unsigned int _unreadMessageCount;
    id _updateIndexMonitor;
    int _state;
    ObjectCache *_headerCache;
    ObjectCache *_bodyDataCache;
    ObjectCache *_bodyCache;
    NSTimer *_timer;
}

+ (void)initialize;
+ (unsigned int)numberOfCurrentlyOpenStores;
+ descriptionOfOpenStores;
+ currentlyAvailableStoreForUid:(MailboxUid*)mailbox;
+ currentlyAvailableStoresForAccount:(MailAccount*)account;
+ registerAvailableStore:fp12;
+ (void)removeStoreFromCache:fp12;
+ (BOOL)createEmptyStoreIfNeededForPath:fp12;
+ (BOOL)createEmptyStoreForPath:fp12;
+ (BOOL)storeAtPathIsWritable:fp12;
+ (BOOL)cheapStoreAtPathIsEmpty:fp12;
- (void)release;
- initWithMailboxUid:fp12 readOnly:(char)fp16;
- copyWithZone:(struct _NSZone *)fp12;
- (void)dealloc;
- (void)openAsynchronouslyUpdatingIndex:(BOOL)updateIndex andOtherMetadata:(char)updateMetadata;
- (void)openAsynchronously;
- (void)openSynchronously;
- (void)openSynchronouslyUpdatingIndex:(BOOL)updateIndex andOtherMetadata:(BOOL)updateMetadata;
- (void)updateMetadataAsynchronously;
- (void)updateMetadata;
- (void)didOpen;
- (void)writeUpdatedMessageDataToDisk;
- (void)invalidateSavingChanges:(char)fp12;
- account;
- mailboxUid;
- (char)isOpened;
- storePathRelativeToAccount;
- displayName;
- (char)isReadOnly;
- description;
- (char)isTrash;
- (char)isDrafts;
- (void)messageFlagsDidChange:fp12 flags:fp16;
- (void)structureDidChange;
- (void)messagesWereAdded:fp12;
- (void)messagesWereCompacted:fp12;
- (void)updateUserInfoToLatestValues;
- (void)totalCount:(unsigned int *)fp12 andSize:(unsigned int *)fp16;
- (void)deletedCount:(unsigned int *)fp12 andSize:(unsigned int *)fp16;
- (unsigned int)totalCount;
- (unsigned int)unreadCount;
- (unsigned int)indexOfMessage:fp12;
- copyOfAllMessages;
- (void)addMessageToAllMessages:(Message*)message;
- _defaultRouterDestination;
- routeMessages:fp12;
- finishRoutingMessages:fp12 routed:fp16;
- (char)canRebuild;
- (void)rebuildTableOfContentsAsynchronously;
- (char)canCompact;
- (void)doCompact;
- (void)deleteMessagesOlderThanNumberOfDays:(int)fp12 compact:(char)fp16;
- (void)deleteMessages:fp12 moveToTrash:(char)fp16;
- (void)undeleteMessages:fp12;
- (void)deleteLastMessageWithHeader:fp12 forHeaderKey:fp16 compactWhenDone:(char)fp20;
- (char)allowsAppend;
- (int)appendMessages:fp12 unsuccessfulOnes:fp16;
- messageWithValue:fp12 forHeader:fp16 options:(unsigned int)fp20;
- messageForMessageID:fp12;
- (void)_setHeaderDataInCache:fp12 forMessage:fp16;
- (NSData*)headerDataForMessage: (Message*)message;
- (NSData*)bodyDataForMessage: (Message*)message;
- fullBodyDataForMessage:fp12;
- bodyForMessage:fp12 fetchIfNotAvailable:(char)fp16;
- dataForMimePart:fp12;
- (char)hasCachedDataForMimePart:fp12;
- (unsigned int)flagsForMessage:fp12;
- colorForMessage:fp12;
- (char)_shouldChangeComponentMessageFlags;
- setFlagsFromDictionary:fp12 forMessages:fp16;
- setFlagsFromDictionary:fp12 forMessage:fp16;
- (void)setFlag:fp12 state:(char)fp16 forMessages:fp20;
- (void)setColor:fp12 highlightTextOnly:(char)fp16 forMessages:fp20;
- (void)messageColorsNeedToBeReevaluated;
- (void)startSynchronization;
- performBruteForceSearchWithString:fp12 options:(int)fp16;
- (STR)createSerialNumberStringFrom:(STR)fp12 colorCode:(unsigned short)fp16;
- _getSerialNumberString;
- (void)setNumberOfAttachments:(unsigned int)fp12 forMessage:fp16;
- (void)updateNumberOfAttachmentsForMessages:fp12;
- (void)updateMessageColorsSynchronouslyForMessages:fp12;
- (void)updateMessageColorsAsynchronouslyForMessages:fp12;
- (void)setJunkMailLevel:(int)fp12 forMessages:fp16;
- (void)setJunkMailLevel:(int)fp12 forMessages:fp16 trainJunkMailDatabase:(char)fp20;
- status;
- (void)fetchSynchronously;
- (char)setPreferredEncoding:(unsigned int)fp12 forMessage:fp16;

@end

@interface MessageStore(MessageFrameworkOnly)
+ (void)_autosaveMessageStore:(void *)fp12;
- (void)_cancelAutosave;
- (void)_setNeedsAutosave;
- _fetchHeaderDataForMessage:fp12;
- _fetchBodyDataForMessage:fp12 andHeaderDataIfReadilyAvailable:(id *)fp16;
- _fetchBodyForMessage:fp12;
- (char)_shouldCallCompactWhenClosing;
- (void)_compactMessageAtIndex:(int)fp12;
- (char)_isReadyToBeInvalidated;
- (void)_saveChanges;
- (void)_resetStateToOpenedIfNeeded;
- (void)_invalidate;
- (void)_invalidateInBackground;
- (void)_countUnreadAndDeleted;
- (void)_cleanUpStaleAttachments;
- _lockFilePath;
- (char)_acquireLockFile:fp12;
- (void)_removeLockFile:fp12;
- (void)_flushAllMessageData;
- (void)_rebuildTableOfContentsSynchronously;
- _setOrGetBody:fp12 forMessage:fp16;
@end

@interface NSDataMessageStore:MessageStore
{
    NSData *_data;
}

- initWithData:fp12;
- (void)dealloc;
- storePath;
- headerDataForMessage:fp12;
- bodyDataForMessage:fp12;
- _setOrGetBody:fp12 forMessage:fp16;
- (unsigned int)flagsForMessage:fp12;

@end

@interface MessageRouter:NSObject
{
    id _threadLock;
}

+ (void)initialize;
+ (char)_hasColorRules;
+ (int)colorChangeCounter;
+ (void)setColorChangeCounter:(int)fp12;
+ (void)enqueueColorRulesDidChange;
+ (char)_colorRuleExistsAfterRule:fp12;
+ (void)ruleAffectingColorsDidChange:fp12;
+ (void)ruleDidChange;
+ (void)_mailboxBecameInvalid:fp12;
+ (void)_mailboxWasRenamed:fp12;
+ _defaultSortRules;
+ sortRulesPath;
+ _sortRulesFromDictionaryRepresentations:fp12;
+ _sortRuleDictionaryRepresentations;
+ (void)_setupSortRules;
+ (void)writeRulesToDisk;
+ rules;
+ (unsigned int)numberOfRules;
+ ruleAtIndex:(int)fp12;
+ (void)removeRuleAtIndex:(int)fp12;
+ (void)insertRule:fp12 atIndex:(int)fp16;
+ (void)addRule:fp12;
+ (void)removeRule:fp12;
+ headersRequiredForRouting;
+ (void)headersRequiredForRoutingDidChange;
+ (void)putRulesThatWantsToHandleMessage:fp12 intoArray:fp16 colorRulesOnly:(char)fp20;
+ colorForMessage:fp12 highlightTextUsingColor:(char *)fp16;
+ (int)junkMailTrainingBalance;
+ (void)incrementJunkMailTrainingDebtBy:(int)fp12;
+ (int)junkMailTrainingDebt;
+ (void)incrementJunkMailTrainingCreditBy:(int)fp12;
+ (int)junkMailTrainingCredit;
+ (void)resetJunkMailTrainingBalance;
+ (void)noteJunkMailboxHasBeenViewed;
+ (char)junkMailboxHasBeenViewedRecently;
+ (int)junkMailBehavior;
+ (void)setJunkMailBehavior:(int)fp12;
+ (void)evaluateJunkMailBehaviorFromRules;
+ (void)reevaluateJunkMessagesInMailboxes:fp12;
+ junkMailRules;
- (char)_routeMessagesIndividually;
- routeMessages:fp12 fromStores:fp16;

@end

@interface MessageRule:NSObject <NSCopying>
{
    NSString *_ruleName;
    NSMutableArray *_criteria;
    MailboxUid *_destinationMailbox;
    NSString *_destinationMailboxPath;
    NSString *_soundPath;
    NSString *_speechAlert;
    NSArray *_recipients;
    int _autoResponseType;
    NSString *_responseMessage;
    NSColor *_color;
    NSString *_appleScriptPath;
    unsigned int _flags;
    int _isActive:1;
    int _shouldTransferMessage:1;
    int _allCriteriaMustBeSatisfied:1;
    int _shouldStopEvaluatingRules:1;
    int _highlightTextUsingColor:1;
    NSDictionary *_otherInfo;
}

- (void)dealloc;
- copyWithZone:(struct _NSZone *)fp12;
- description;
- initWithDictionaryRepresentation:fp12;
- dictionaryRepresentation;
- (void)performActionsOnMessages:fp12 destinationStores:fp16 rejectedMessages:fp20 messagesToBeDeleted:fp24;
- (void)_performAutoResponseActionOnMessages:fp12;
- (void)_performAppleScriptActionWithMessages:fp12;
- (void)addHeadersRequiredForRoutingToArray:fp12;
- (char)doesMessageSatisfyCriteria:fp12;
- (char)isValid:(id *)fp12;
- ruleName;
- (void)setRuleName:fp12;
- (char)isTerminalAction;
- (char)isAJunkMailRule;
- (char)isActive;
- (void)setIsActive:(char)fp12;
- (char)allCriteriaMustBeSatisfied;
- (void)setAllCriteriaMustBeSatisfied:(char)fp12;
- criteria;
- (void)setCriteria:fp12;
- (char)shouldTransferMessage;
- (void)setShouldTransferMessage:(char)fp12;
- _destinationMailboxCreateIfNeeded:(char)fp12;
- destinationMailbox;
- (void)setDestinationMailbox:fp12;
- (unsigned int)flagsToApply;
- (void)setFlagsToApply:(unsigned int)fp12;
- appleScriptPath;
- (void)setAppleScriptPath:fp12;
- color;
- (void)setColor:fp12;
- (char)highlightTextUsingColor;
- (void)setHighlightTextUsingColor:(char)fp12;
- (char)affectsColorEvaluation;
- (int)autoResponseType;
- (void)setAutoResponseType:(int)fp12;
- autoResponseRecipients;
- (void)setAutoResponseRecipients:fp12;
- responseMessage;
- (void)setResponseMessage:fp12;
- soundPath;
- (void)setSoundPath:fp12;
- speechAlert;
- (void)setSpeechAlert:fp12;
- (char)shouldStopEvaluatingRules;
- (void)setShouldStopEvaluatingRules:(char)fp12;
- objectSpecifier;

@end

@interface MessageRule(Applescript)
- (void)updateIsActive;
- (int)actionColorMessage;
- (void)setActionColorMessage:(int)fp12;
- (int)highlightColorValue:fp12;
- (char)actionDeleteMessage;
- (void)setActionDeleteMessage:(char)fp12;
- actionForwardToAddress;
- (void)setActionForwardToAddress:fp12;
- actionForwardText;
- (void)setActionForwardText:fp12;
- (char)actionMarkAsFlagged;
- (void)setActionMarkAsFlagged:(char)fp12;
- (char)actionMarkAsRead;
- (void)setActionMarkAsRead:(char)fp12;
- actionPlaySound;
- (void)setActionPlaySound:fp12;
- actionRedirectToAddress;
- (void)setActionRedirectToAddress:fp12;
- actionReplyText;
- (void)setActionReplyText:fp12;
- ruleDescription;
- (void)setRuleDescription:fp12;
- (void)insertInCriteria:fp12 atIndex:(unsigned int)fp16;
- (void)insertInCriteria:fp12;
- (void)removeFromCriteriaAtIndex:(unsigned int)fp12;
- (void)setAddress:fp12 forResponseType:(int)fp16;
@end

@interface IMAPConnection:Connection
{
    id _delegate;
    int _delegateShouldHandleUntaggedResponse:1;
    int _delegateDidReceiveResponse:1;
    int _delegateDidFinishSelect:1;
    int _delegateDidDisconnect:1;
    int _serverStartTLS:1;
    int _serverLiteralPlus:1;
    int _serverUidPlus:1;
    int _serverChildren:1;
    int _serverIdle:1;
    int _serverNamespace:1;
    int _serverMultiAppend:1;
    int _serverUnselect:1;
    int _connectionState;
    NSString *_separatorChar;
    NSString *_serverPathPrefix;
    NSString *_selectedMailbox;
    NSMutableSet *_capabilities;
    unsigned int _commandNumber;
    NSMutableData *_data;
    NSLock *_lock;
    unsigned int _readBufferSize;
    double _expirationTime;
}

+ (void)initialize;
+ (void)setReadSizeParameters;
- init;
- (void)dealloc;
- delegate;
- (void)setDelegate:fp12;
- (char)_doBasicConnectionUsingAccount:fp12 errorMessage:(id *)fp16;
- (char)connectUsingAccount:fp12 errorMessage:(id *)fp16;
- (void)disconnectAndNotifyDelegate:(char)fp12;
- (void)disconnect;
- (int)connectionState;
- (char)isValid;
//- _responseFromSendingCommand:(struct ? *)fp12;
//- (char)_sendCommand:(struct ? *)fp12 response:(id *)fp16;
//- (void)didFinishCommand:(struct ? *)fp12;
//- _copyNextServerResponseForCommand:(struct ? *)fp12;
//- _copyNextTaggedOrContinuationResponseForCommand:(struct ? *)fp12;
- _errorStringForResponse:fp12 forCommand:(int)fp16;
- capabilities;
- (void)noop;
- (char)authenticateUsingAccount:fp12 errorMessage:(id *)fp16;
- (char)loginWithAccount:fp12 password:fp16 errorString:(id *)fp20;
- (char)logout;
- separatorChar;
- _doListCommand:(int)fp12 withReference:fp16 mailboxName:fp20 options:(int)fp24;
- listingForMailbox:fp12 options:(int)fp16;
- subscribedListingForMailbox:fp12 options:(int)fp16;
- (void)close;
- (void)closeAndLogout;
- (void)unselect;
- expunge;
- (char)expungeUids:fp12;
- statusForMailbox:fp12 args:fp16;
- (char)examineMailbox:fp12 errorMessage:(id *)fp16;
- (char)selectMailbox:fp12 errorMessage:(id *)fp16;
- selectedMailbox;
- (char)createMailbox:fp12 errorMessage:(id *)fp16;
- (char)deleteMailbox:fp12 errorMessage:(id *)fp16;
- (char)renameMailbox:fp12 toMailbox:fp16 errorMessage:(id *)fp20;
- (char)_sendMailboxCommand:(int)fp12 withArguments:fp16 errorMessage:(id *)fp20;
- search:fp12;
- (int)searchCount:fp12;
- (char)storeFlags:fp12 state:(char)fp16 forUids:fp20;
- (char)deleteMessagesOlderThanNumberOfDays:(int)fp12;
//- _responseFromSendingCommand:(struct ? *)fp12 andPossiblyCreateMailbox:fp16;
- (char)copyUids:fp12 toMailboxNamed:fp16 newMessageInfo:(id *)fp20;
- (char)appendData:fp12 toMailboxNamed:fp16 flags:fp20 dateReceived:fp24 newMessageInfo:(id *)fp28;
//- (char)fetchUidsAndFlagsForUidRange:(struct ?)fp12 intoArray:fp20;
- _headersRequiredForRouting;
- _fetchArgumentForMessageSkeletons;
//- (void)fetchMessageSkeletonsForUidRange:(struct ?)fp12 intoArray:fp20;
- fetchHeadersForUid:(int)fp12;
- fetchInternalDateForUids:fp12;
- (unsigned int)readBufferSize;
- (void)setReadBufferSize:(unsigned int)fp12;
- fetchRawDataForUid:(int)fp12 partNumber:fp16 intoDestinationFilePath:fp20 keepMessageInMemory:(char)fp24 sizeHint:(unsigned int)fp28;
- fetchBodyStructureForUid:(int)fp12;
//- (char)_doUidFetchWithRange:(struct ?)fp12 arguments:fp20 results:fp24;
- _messageSetForNumbers:fp12;
//- _messageSetForRange:(struct ?)fp12;
- parenthesizedStringWithObjects:fp12;
- (char)authenticateUsingAccount:fp12 authenticator:fp16 errorMessage:(id *)fp20;
- (char)startTLSForAccount:fp12 errorMessage:(id *)fp16;
- (void)lock;
- description;

@end

/*
@interface IMAPConnection(MFPrivate)
- _readDataOfLength:(int)fp12 errorMessage:(id *)fp16;
@end
*/


@interface IMAPStore:MessageStore <NSCoding>
{
    NSMutableArray *_unsolicitedResponses;
    NSString *_statusMessageFormat;
    int _statusMessageCount;
    int _statusMessageMaximum;
    int _activityMonitorKey;
    unsigned int _numberOfFirstNewMessage;
    int _synchronizationState:3;
    int _supportsCustomPermanentFlags:1;
    int _updatingCache:1;
    int _updateIndex:1;
    int _updateEverythingElse:1;
    int _reserved:25;
    NSString *_mailboxName;
    NSConditionLock *_synchronizationStateLock;
}

+ (char)storeAtPathIsWritable:fp12;
+ (char)createEmptyStoreForPath:fp12;
+ (void)initialize;
- initWithMailboxUid:fp12 readOnly:(char)fp16;
- (void)dealloc;
- (void)_copyDataFrom:fp12;
- initWithCoder:fp12;
- (void)encodeWithCoder:fp12;
- (void)openSynchronouslyUpdatingIndex:(char)fp12 andOtherMetadata:(char)fp16;
- (void)didOpen;
- (void)updateMetadata;
- (void)writeUpdatedMessageDataToDisk;
- (void)_invalidate;
- (char)_shouldCallCompactWhenClosing;
- (void)fetchSynchronously;
- (char)canRebuild;
- (void)_rebuildTableOfContentsSynchronously;
- mailboxName;
- (char)canCompact;
- (void)doCompact;
- (void)messagesWereCompacted:fp12;
- (void)deleteMessagesOlderThanNumberOfDays:(int)fp12 compact:(char)fp16;
- (char)allowsAppend;
- (void)_addOfflineTransferMessages:fp12;
- _copyOfflineTransferMessage:fp12 withUid:(unsigned int)fp16;
- (char)copyMessages:fp12 toStore:fp16;
- _appendDataForMessage:fp12;
- (int)appendMessages:fp12 unsuccessfulOnes:fp16;
- (void)_synchronouslyStoreFlagsFromDictionary:fp12 forMessages:fp16;
- (void)_setFlagsFromDictionary:fp12 forMessages:fp16;
- setFlagsFromDictionary:fp12 forMessages:fp16;
- (char)setPreferredEncoding:(unsigned int)fp12 forMessage:fp16;
- (unsigned int)flagsForMessage:fp12;
- _dataForMessage:fp12 readHeadersOnly:(char)fp16;
- _createDataFromMimePart:fp12 threshold:(unsigned int)fp16;
- _fetchPartialDataIfNecessaryForMessage:fp12;
- _fetchDataForMimePart:fp12 keepInMemory:(char)fp16 writeToDisk:(char)fp20;
- dataForMimePart:fp12;
- (char)hasCachedDataForMimePart:fp12;
- fullBodyDataForMessage:fp12;
- _fetchBodyDataForMessage:fp12 andHeaderDataIfReadilyAvailable:(id *)fp16;
- _fetchHeaderDataForMessage:fp12;
- (void)_setInternalDateForMessages:fp12;
- colorForMessage:fp12;
- messageForMessageID:fp12;
- (char)_allMessagesHaveDateReceived;
- _messageForUid:(unsigned int)fp12;
- _messageForTemporaryUid:(unsigned int)fp12;
- connection;
//- (char)_synchronizeUidRange:(struct ?)fp12 newMessages:fp20 usingConnection:fp24;
- (void)_synchronizeWithServerUsingConnection:fp12;
//- (void)connection:fp12 didReceiveResponse:fp16 forCommand:(struct ? *)fp20;
- (void)startSynchronization;
- _uidsForMessages:fp12;
//- (char)connection:fp12 shouldHandleUntaggedResponse:fp16 forCommand:(struct ? *)fp20;
- (void)connectionDidDisconnect:fp12;
- (void)_processUnsolicitedResponsesUsingConnection:fp12;
- (void)_retrieveNewMessages;
//- (void)_retrieveNewMessagesInUIDRange:(struct ?)fp12 intoArray:fp20 statusFormat:fp24 usingConnection:fp28;
- (char)allowsIndexing;
- (void)_cacheMessageBodiesAsynchronously:fp12;
- (void)_cacheMessageBodiesAndUpdateIndex:fp12;
- _preferredOrderForFetchingMessageBodies:fp12;
- (void)_cacheMessageBodiesToDisk:fp12;
- (void)_cacheAttachmentPartsForMessages:fp12;
- (void)_updateCacheDirectoryAndIndexDoTheseFirst:fp12;
- (char)hasValidCacheFileForUid:(int)fp12;
- (void)setUid:(unsigned int)fp12 forMessageWithTemporaryUid:(unsigned int)fp16;
- (void)removeCachedFiles:fp12;
- (void)_synchronizationCompleted;
- (void)waitForSynchronizationToComplete;

@end


/*
@interface IMAPMessage:Message <NSCoding>
{
    unsigned int _size;
    struct ? _imapFlags;
    int _uid;
}

+ (void)initialize;
+ messageWithHeaders:fp12 flags:(unsigned int)fp16 size:(unsigned int)fp20 uid:(int)fp24;
- initWithHeaders:fp12 flags:(unsigned int)fp16 size:(unsigned int)fp20 uid:(int)fp24;
- initWithCoder:fp12;
- (void)encodeWithCoder:fp12;
- (unsigned int)messageSize;
- messageID;
- (int)compareByNumberWithMessage:fp12;
- (int)uid;
- (void)setUid:(int)fp12;
- (char)isPartial;
- (void)setIsPartial:(char)fp12;
- (char)isMessageContentsLocallyAvailable;
- (char)partsHaveBeenCached;
- (void)setPartsHaveBeenCached:(char)fp12;
- (void)setPreferredEncoding:(unsigned int)fp12;
- (char)hasTemporaryUid;
- (void)setHasTemporaryUid:(char)fp12;

@end
*/

@interface NSString(IMAPNameEncoding)
- encodedIMAPMailboxName;
- decodedIMAPMailboxName;
@end

@interface POP3Connection:Connection
{
    NSMutableData *_sendBuffer;
    struct __CFDictionary *_listResults;
    int _state;
    unsigned int numberOfMessagesAvailable;
    NSData *_apopTimeStamp;
    id _delegate;
    char _delegateRespondsToReceivedNumberOfBytes;
    char _delegateRespondsToWillRetrieveMessageNumber;
    char _delegateRespondsToDidRetrieveMessageNumber;
    char _hidingPassword;
}

+ (void)initialize;
- init;
- (void)dealloc;
- capabilities;
- authenticationMechanisms;
- (char)_doBasicConnectionWithAccount:fp12 errorMessage:(id *)fp16;
- (char)connectUsingAccount:fp12 errorMessage:(id *)fp16;
- (char)authenticateUsingAccount:fp12 errorMessage:(id *)fp16;
- (char)authenticateUsingAccount:fp12 authenticator:fp16 errorMessage:(id *)fp20;
- (int)quit;
- (char)supportsAPOP;
- (void)disableAPOP;
- (int)doStat;
- (int)list:(int)fp12;
- (void)_getListResults;
- (void)getMessageNumbers:(struct __CFArray **)fp12 andMessageIdsByNumber:(struct __CFDictionary **)fp16;
- (void)retr:(unsigned long)fp12;
- (int)dele:(unsigned long)fp12;
- retainedMessageHeaderForMessageNumber:(unsigned long)fp12;
- (void)getTopOfMessageNumber:(unsigned long)fp12 intoMutableData:fp16;
- (unsigned long)sizeOfMessageNumber:(unsigned long)fp12;
- (char)messagesAvailable;
- (int)fetchMessages:(struct __CFArray *)fp12;
- (void)deleteMessagesOnServer:(struct __CFArray *)fp12;
- (void)setDelegate:fp12;
- delegate;
- (char)startTLSForAccount:fp12 errorMessage:(id *)fp16;

@end

@interface POP3Connection(PrivateCommands)
- (void)_readMultilineResponseWithMaxSize:(int)fp12 intoMutableData:fp16;
- (int)_sendCommand:(const STR)fp12 withArguments:fp16;
- copyReplyLineData;
- (int)_getStatusFromReply;
- (int)_apopWithUsername:fp12 password:fp16;
- (int)_user:fp12;
- (int)_pass:fp12;
@end

@interface POP3FetchStore:MessageStore
{
    char _currentlyFetchingMessage;
    char _lastConnectionFailed;
    unsigned int _numMessagesToFetch;
    unsigned int _numMessagesFetchedSoFar;
    unsigned int _sizeOfMessageBeingFetched;
    unsigned int _numBytesReceivedSoFar;
    unsigned int _totalBytesToFetch;
    unsigned int _totalBytesReceivedSoFar;
    struct __CFDictionary *_serverMessageIdsByNumber;
    struct __CFSet *_skippedMessageIds;
    struct __CFArray *_messageNumbersToDelete;
    POP3Connection *_connection;
    NSMutableDictionary *_seenMessages;
    int _activityMonitorKey;
    double _lastBatchStartTime;
}

- initWithPOPAccount:fp12;
- (void)dealloc;
- displayName;
- (void)fetchSynchronously;
- (void)deleteSeenMessagesNow;
- (void)_loadSeenMessages;
- (void)_saveSeenMessages;
- (void)_removeLeftoversFromSeenMessagesUsingIDs:(struct __CFDictionary *)fp12;
- (void)_backgroundFetchFailed:fp12;
- (unsigned int)flagsForMessage:fp12;
- _fetchHeaderDataForMessage:fp12;
- _fetchBodyDataForMessage:fp12 andHeaderDataIfReadilyAvailable:(id *)fp16;
- messageForMessageID:fp12;
- (void)connection:fp12 receivedNumberOfBytes:(int)fp16;
- (int)connection:fp12 willRetrieveMessageNumber:(unsigned int)fp16 header:fp20 size:(unsigned int)fp24;
- _defaultRouterDestination;
- (void)writeUpdatedMessageDataToDisk;
- (void)_flushMessagesToDestinationStore;
- (void)connection:fp12 didRetrieveData:fp16 forMessageNumber:(unsigned int)fp20;

@end

@interface BerkeleyMbox:MessageStore
{
    NSData *_mboxData;
    NSString *_path;
}

+ (char)storeExistsForPath:fp12;
+ (char)storeAtPathIsWritable:fp12;
+ (char)createEmptyStoreForPath:fp12;
- initWithMailboxUid:fp12 readOnly:(char)fp16;
- initWithPath:fp12 create:(char)fp16 readOnly:(char)fp20 account:fp24;
- (void)dealloc;
- (void)writeUpdatedMessageDataToDisk;
- path;
- _lockFilePath;
- _mboxData;
- (void)_resetAllMessages;
- (unsigned int)flagsForMessage:fp12;
- _fetchHeaderDataForMessage:fp12;
- _fetchBodyDataForMessage:fp12 andHeaderDataIfReadilyAvailable:(id *)fp16;
- _constructDeletedList;
- (void)doCompact;
- (char)allowsIndexing;
- _defaultRouterDestination;
- (void)fetchSynchronously;

@end

@interface NeXTMbox:MessageStore
{
    NSData *_mboxData;
    TableOfContents *_toc;
    char _haveUpdatedMetadata;
}

+ (char)storeExistsForPath:fp12;
+ (char)createEmptyStoreForPath:fp12;
+ (char)storeAtPathIsWritable:fp12;
+ (char)cheapStoreAtPathIsEmpty:fp12;
- initWithMailboxUid:fp12 readOnly:(char)fp16;
- (void)dealloc;
- (void)openSynchronouslyUpdatingIndex:(char)fp12 andOtherMetadata:(char)fp16;
- (void)updateMetadata;
- _lockFilePath;
- (void)_invalidate;
- (void)writeUpdatedMessageDataToDisk;
- (void)_rebuildTableOfContentsSynchronously;
- (void)_flushAllMessageData;
- (void)_resetAllMessages;
- messageForMessageID:fp12;
- _TOCMessageForMessage:fp12;
- (unsigned int)flagsForMessage:fp12;
- _fetchHeaderDataForMessage:fp12;
- _fetchBodyDataForMessage:fp12 andHeaderDataIfReadilyAvailable:(id *)fp16;
- (char)canCompact;
- (void)doCompact;
- (void)_deleteAttachments:fp12;
- _processNeXTMailAttachmentHeaders:fp12;
- (char)_appendMessage:fp12 toFile:fp16 andTableOfContents:fp20;
- (int)_appendMessages:fp12 unsuccessfulOnes:fp16 mboxName:fp20 tableOfContents:fp24;
- (char)allowsAppend;
- (int)appendMessages:fp12 unsuccessfulOnes:fp16;
- (void)_incorporateMailFromIncoming;
- (int)_writeMessagesToIncomingMail:fp12 unsuccessfulOnes:fp16;
- (char)indexIsValid;

@end

@interface TableOfContents:NSObject
{
    char _isValid;
    NSMutableArray *_messages;
    NSString *_path;
    NSData *_data;
    unsigned int _pos;
//    struct ? _header;
    int _header;
    NSMutableDictionary *_messageIDMap;
    char _isDirty;
}

- (void)_checkHeader;
- (void)_getMessageSummaries;
- (char)loadCacheFromFile;
- tocHeaderData;
- cachedData;
- (void)setTimeStamp:(int)fp12;
- init;
- initWithPath:fp12;
- (void)dealloc;
- (char)isDirty;
- (char)isValid;
- storePath;
- (void)rebuildCacheFromMessages:fp12;
- (char)flushCache;
- (unsigned int)count;
- cachedHeadersAtIndex:(unsigned int)fp12;
- messages;
- (void)removeMessage:fp12;
- (void)_addMessageToMap:fp12;
- (void)addMessage:fp12;
- addMessage:fp12 withRange:(struct _NSRange)fp16;
- description;
- (void)setPath:fp12;
- path;
- (char)flushToFile;
- messageForMessageID:fp12;

@end


@interface NSDate(toc_extension)
- (int)tocSillyDateInt;
@end

@interface MessageStore(Indexing)
- (char)allowsIndexing;
- (char)isIndexed;
- (char)indexIsValid;
- (void)updateIndex;
- _index;
- (void)openIndexWithWriteAccess:(char)fp12;
- (void)checkForValidIndex;
- (void)closeIndex;
- (void)_fullUpdateIndexAsynchronously;
- (void)_setNeedsToUpdateIndex;
- (void)_addMessagesToIndex:fp12;
- (void)_removeMessagesFromIndex:fp12;
- (void)stopUpdatingIndex;
- (void)handleUpdatingFinished;
- (void)_prepareIndexForUpdate;
- (void)_updateIndex;
- (void)_fullUpdateOfIndex;
- (void)_writeUpdatedIndexToDisk;
- indexedSearchFor:fp12 ranks:(id *)fp16 errorString:(id *)fp20;
- cheapIndexedSearchFor:fp12 ranks:(id *)fp16 errorString:(id *)fp20;
- (void)_invalidateIndex;
- (char)_isUpdatingIndex;
@end


@interface Message:NSObject
{
    MessageStore *_store;
    MessageHeaders *_headers;
    unsigned int _messageFlags;
//    struct ? _flags;
    int _flags;
    unsigned int _preferredEncoding;
}

+ verboseVersion;
+ frameworkVersion;
+ (void)setUserAgent:fp12;
+ userAgent;
+ messageWithRFC822Data:fp12;
+ _filenameFromSubject:fp12 inDirectory:fp16 ofType:fp20;
+ makeUniqueAttachmentNamed:fp12 inDirectory:fp16;
+ makeUniqueAttachmentNamed:fp12 withExtension:fp16 inDirectory:fp20;
- description;
- init;
- copyWithZone:(struct _NSZone *)fp12;
- messageStore;
- (void)setMessageStore:fp12;
- retainedHeaders;
- headers;
- mutableHeaders;
- (void)setHeaders:fp12;
- (unsigned int)messageFlags;
- (void)setMessageFlags:(unsigned int)fp12;
- messageBody;
- messageBodyIfAvailable;
- messageDataIncludingFromSpace:(char)fp12;
- (char)colorHasBeenEvaluated;
- color;
- (void)setColor:fp12;
- (void)setColorHasBeenEvaluated:(char)fp12;
- (void)dealloc;
- (unsigned int)messageSize;
- (void)flushCachedData;
- attributedString;
- preferredEmailAddressToReplyWith;
- displayTypes;
- messageID;
- (int)compareByNumberWithMessage:fp12;
- (char)isMessageContentsLocallyAvailable;
- headersForIndexing;
- stringForIndexing;
- (unsigned int)numberOfAttachments;
- (int)junkMailLevel;
- (unsigned int)preferredEncoding;
- (void)setPreferredEncoding:(unsigned int)fp12;
- rawSourceFromHeaders:fp12 body:fp16;

@end

@interface TOCMessage:Message
{
    struct _NSRange _mboxRange;
    NSString *_attachments;
    char _refState;
    NSString *_messageID;
}

+ messageIDForSender:fp12 subject:fp16 dateAsTimeInterval:(double)fp40;
+ TOCMessageFromMessage:fp12;
- initWithMessage:fp12;
- (void)dealloc;
- (unsigned int)loadCachedInfoFromBytes:(const STR)fp12 length:(unsigned int)fp16 isDirty:(char *)fp20;
- cachedData;
- (struct _NSRange)mboxRange;
- (void)setMboxRange:(struct _NSRange)fp12;
- attachment;
- messageID;
- (int)compareByNumberWithMessage:fp12;
- (unsigned int)messageSize;
- description;

@end


@interface MessageBody:NSObject <NSCopying>
{
    Message *_message;
    NSString *_attachPath;
}

+ defaultAttachmentDirectory;
+ (void)setDefaultAttachmentDirectory:fp12;
- rawData;
- attributedString;
- (char)isHTML;
- (char)isRich;
- htmlDocument;
- (void)dealloc;
- stringForIndexing;
- (void)setMessage:fp12;
- message;
- (void)setAttachmentDirectory:fp12;
- attachmentDirectory;
- (void)calculateNumberOfAttachmentsIfNeeded;
- copyWithZone:(struct _NSZone *)fp12;

@end

@interface MessageHeaders:NSObject <NSCopying>
{
    Message *_message;
    NSString *_to;
    NSString *_subject;
    NSString *_sender;
    unsigned int _dateSentInterval;
    unsigned int _dateReceivedInterval;
    unsigned char _subjectPrefixLength;
}

+ localizedHeaders;
+ localizedHeadersFromEnglishHeaders:fp12;
+ englishHeadersFromLocalizedHeaders:fp12;
- init;
- initWithHeaders:fp12;
- initWithMessage:fp12;
- _initWithMessage:fp12 sender:fp16 subject:fp20 dateSent:fp24 dateReceived:fp28;
- initWithMessage:fp12 sender:fp16 subject:fp20 dateSent:fp24 dateReceived:fp28;
- initWithMessage:fp12 sender:fp16 to:fp20 subject:fp24 dateSent:fp28 dateReceived:fp32;
- copyWithZone:(struct _NSZone *)fp12;
- mutableCopy;
- (void)dealloc;
- (void)setMessage:fp12;
- _headerData;
- (char)_isStructuredHeaderKey:fp12;
- attributedStringShowingHeaderDetailLevel:(int)fp12;
- (unsigned int)subjectPrefixLength;
- subjectNotIncludingReAndFwdPrefix;
- subject;
- (void)setSubject:fp12;
- sender;
- (void)setSender:fp12;
- to;
- (void)setTo:fp12;
- dateReceived;
- (void)setDateReceived:fp12;
- (double)dateReceivedAsTimeIntervalSince1970;
- (char)needsDateReceived;
- dateSent;
- (double)dateSentAsTimeIntervalSince1970;
- (void)setDateSent:fp12;
- messageID;
- allHeaderKeys;
- (void)_setCapitalizedKey:fp12 forKey:fp16;
- _capitalizedKeyForKey:fp12;
- _headerValueForKey:fp12 fromData:fp16;
- (char)hasHeaderForKey:fp12;
- _headerValueForKey:fp12;
- headersForKey:fp12;
- firstHeaderForKey:fp12;
- (void)flushCachedData;
- _decodeHeaderKeysFromData:fp12;
- isoLatin1CharsetHint;
- (void)_appendAddressList:fp12 toData:fp16;
- encodedHeaders;
- encodedHeadersIncludingFromSpace:(char)fp12;
- (void)appendHeaderData:fp12 andRecipients:fp16;
- _encodedHeadersIncludingFromSpace:(char)fp12;

@end

@interface MessageFlags:NSObject <NSCoding>
{
    unsigned int realFlags;
}

- initWithCoder:fp12;
- (void)encodeWithCoder:fp12;

@end

@interface NSCoder(MFMessageFlags)
- (unsigned int)decodeMessageFlags;
@end

@interface MutableMessageHeaders:MessageHeaders
{
    NSData *_data;
    NSMutableDictionary *_headersAdded;
    NSMutableArray *_headersRemoved;
    NSData *_partialHeaderData;
}

- initWithHeaders:fp12;
- initWithData:fp12 isFull:(char)fp16;
- initWithData:(NSData*)data;
- mutableCopy;
- (void)dealloc;
- _headerData;
- allHeaderKeys;
- (char)hasHeaderForKey:fp12;
- _headerValueForKey:fp12;
- (void)removeHeaderForKey:fp12;
- (void)setHeader:fp12 forKey:fp16;
- (void)appendFromSpaceIfMissing;
- (void)_appendHeaderKey:fp12 value:fp16 toData:fp20;
- (void)_appendAddedHeaderKey:fp12 value:fp16 toData:fp20;
- _encodedHeadersIncludingFromSpace:(char)fp12;
- (void)setAddressList:fp12 forKey:fp16;
- (void)flushCachedData;

@end

@interface NeXTMailBody:MessageBody
{
}

+ tarCommand;
+ (void)setTarCommand:fp12;
+ compressCommand;
+ (void)setCompressCommand:fp12;
+ shellCommand;
+ (void)setShellCommand:fp12;
- attachmentName;
- (char)makeUniqueTemporaryAttachmentInDirectory:fp12;
- (char)convertData:fp12 toData:fp16 pattern:fp20 replacement:fp24 truncateBeforeBackslash:(char)fp28 removeExtraLeftBrace:(char)fp32;
- (char)convertIndexFor:fp12 outgoing:(char)fp16;
- (char)enztar:fp12 into:fp16;
- (char)deztar:fp12 into:fp16;
- prepareAttachmentForUuencoding;
- rawData;
- decodeBodyIntoDirectory:fp12;
- attributedString;
- (char)isRich;

@end

@interface NSString(shell_escape)
- _fixStringForShell;
@end

@interface MimeBody:MessageBody
{
    MimePart *_topLevelPart;
    unsigned int _preferredTextEncoding;
    int _shouldDeleteAttachmentOnDealloc:1;
    int _preferredAlternative:15;
    int _numAlternatives:16;
}

+ (void)initialize;
+ versionString;
+ createMimeBoundary;
- init;
- (void)dealloc;
- (char)makeUniqueTemporaryAttachmentInDirectory:fp12;
- topLevelPart;
- (void)setTopLevelPart:fp12;
- (unsigned int)preferredTextEncoding;
- (void)setPreferredTextEncoding:(unsigned int)fp12;
- mimeType;
- mimeSubtype;
- (void)calculateNumberOfAttachmentsIfNeeded;
- (char)isHTML;
- (char)isRich;
- attachmentDirectory;
- attributedString;
- htmlDocument;
- stringForIndexing;
- (int)numberOfAlternatives;
- (void)setPreferredAlternative:(int)fp12;
- (int)preferredAlternative;
- preferredBodyPart;
- copyWithZone:(struct _NSZone *)fp12;

@end

@interface NSMutableData(MimeDataEncoding)
- (void)appendQuotedPrintableDataForHeaderBytes:(const STR)fp12 length:(unsigned int)fp16;
@end

@interface NSData(MimeDataEncoding)
+ (unsigned int)quotedPrintableLengthOfHeaderBytes:(const STR)fp12 length:(unsigned int)fp16;
- decodeQuotedPrintableForText:(char)fp12;
- encodeQuotedPrintableForText:(char)fp12;
- decodeBase64;
- (char)isValidBase64Data;
- encodeBase64WithoutLineBreaks;
- encodeBase64;
- decodeModifiedBase64;
- encodeModifiedBase64;
- encodeBase64HeaderData;
@end

/*
@interface MimeEnrichedReader:NSObject
{
    NSScanner *_scanner;
    int _noFillLevel:30;
    int _eatOneNewline:1;
    int _insideComment:1;
    struct __CFArray *_commandStack;
    id _outputString;
    NSMutableString *_stringBuffer;
    float _indentWidth;
}

+ punctuationSet;
+ parenSet;
- (void)mismatchError:fp12;
- (void)dealloc;
- (void)appendStringToBuffer:fp12;
- (void)resetStateWithString:fp12 outputString:fp16;
- (void)nowWouldBeAGoodTimeToAppendToTheAttributedString;
- (void)handleNoParameterCommand:(const struct ? *)fp12;
- (void)setupFontStackEntry:(struct _CommandStackEntry *)fp12;
- (void)setupRulerStackEntry:(struct _CommandStackEntry *)fp12;
- (void)beginCommand:fp12;
- (void)endCommand:fp12;
- (void)parseParameterString:fp12;
- currentFont;
- currentParagraphStyle;
- readToken;
- (int)readTokenInto:(id *)fp12 attributes:(id *)fp16;
- (void)convertRichTextString:fp12 intoOutputString:fp16;
- (void)convertEnrichedString:fp12 intoOutputString:fp16;

@end
*/

@interface NSString(MimeEnrichedReader)
+ stringFromMimeEnrichedString:fp12;
@end

@interface NSAttributedString(MimeEnrichedReader)
+ attributedStringFromMimeRichTextString:fp12;
+ attributedStringFromMimeEnrichedString:fp12;
@end

/*
@interface MimeEnrichedWriter:NSObject
{
    NSAttributedString *_attributedString;
    NSFont *_defaultFont;
    NSFont *_defaultFixedPitchFont;
    float _defaultPointSize;
    struct __CFTree *_outputTree;
    unsigned int _lengthEstimate;
    unsigned int _currentLineStart;
    unsigned int _lastSpace;
    struct __CFTree *_currentNode;
    struct EnrichedState _currentState;
}

+ (void)initialize;
- (void)setState:(struct EnrichedState *)fp12 fromAttributes:fp16;
- (void)setState:(struct EnrichedState *)fp12 fromTreeNode:(struct __CFTree *)fp16;
- (void)dealloc;
- convertAttributedString:fp12;
- (void)updateTreeForAttributes:fp12 range:(struct _NSRange)fp16;
- (void)_appendTextFromRange:(struct _NSRange)fp12 inString:fp20 toString:fp24;
- (void)appendOutputForNode:(struct __CFTree *)fp12 toString:fp16;

@end
*/

@interface NSAttributedString(MimeEnrichedWriter)
- enrichedString;
@end

@interface NSMutableData(RFC2231Support)
- (void)appendRFC2231CompliantValue:fp12 forKey:fp16;
@end

@interface NSMutableDictionary(RFC2231Support)
- (void)fixupRFC2231Values;
@end

/*
@interface NSString(MimeHeaderEncoding)
+ (const struct ? *)preferredMimeEncodingInfo;
+ (unsigned int)preferredMIMEStringEncoding;
- (const struct ? *)bestMimeEncodingInfo;
- (unsigned int)bestMIMEStringEncoding;
- encodedHeaderData;
- decodeMimeHeaderValue;
- decodeMimeHeaderValueWithCharsetHint:fp12;
@end
*/

@interface MimeTextAttachment:NSTextAttachment
{
    MimePart *_mimePart;
}

- (void)dealloc;
- initWithMimePart:fp12;
- mimePart;
- (void)setMimePart:fp12;
- (unsigned int)approximateSize;
- (char)isPlaceholder;
- (char)hasBeenDownloaded;
- (char)shouldDownloadAttachmentOnDisplay;

@end

/*
@interface HTMLTextAttachment(MimeSupport)
- (unsigned int)approximateSize;
@end

@interface NSTextAttachment(MimeSupport)
- (unsigned int)approximateSize;
- mimePart;
- (char)hasBeenDownloaded;
- (char)isPlaceholder;
- attachmentCellWithoutForcingItToBeCreated;
- (char)shouldDownloadAttachmentOnDisplay;
@end
*/

@interface NSScanner(MimePart)
- scanMimeTokenUsingSeparators:fp12;
@end

@interface Account:NSObject
{
    NSMutableDictionary *_info;
    int _isOffline:1;
    int _willingToGoOnline:1;
    int _autosynchronizingEnabled:1;
}

+ (void)initialize;
+ (char)haveAccountsBeenConfigured;
+ readAccountsUsingDefaultsKey:fp12;
+ (void)saveAccounts:fp12 usingDefaultsKey:fp16;
+ (void)saveAccountInfoToDefaults;
+ createAccountWithDictionary:fp12;
+ accountTypeString;
- init;
- (void)dealloc;
- (void)setAutosynchronizingEnabled:(char)fp12;
- (void)_queueAccountInfoDidChange;
- accountInfo;
- (void)_setAccountInfo:fp12;
- (void)setAccountInfo:fp12;
- defaultsDictionary;
- (char)isActive;
- (void)setIsActive:(char)fp12;
- (char)isOffline;
- (void)setIsOffline:(char)fp12;
- (char)isWillingToGoOnline;
- (void)setIsWillingToGoOnline:(char)fp12;
- displayName;
- (void)setDisplayName:fp12;
- username;
- (void)setUsername:fp12;
- hostname;
- (void)setHostname:fp12;
- (void)_setPasswordInKeychain:fp12;
- (void)_removePasswordInKeychain;
- (void)setTemporaryPassword:fp12;
- (void)setPassword:fp12;
- passwordFromStoredUserInfo;
- password;
- promptUserForPasswordWithMessage:fp12;
- promptUserIfNeededForPasswordWithMessage:fp12;
- (unsigned int)portNumber;
- (unsigned int)defaultPortNumber;
- (unsigned int)defaultSecurePortNumber;
- (void)setPortNumber:(unsigned int)fp12;
- serviceName;
- secureServiceName;
- (void)releaseAllConnections;
- (void)validateConnections;
- (char)usesSSL;
- (void)setUsesSSL:(char)fp12;
- sslProtocolVersion;
- (void)setSSLProtocolVersion:fp12;
- (void)accountInfoDidChange;
- securityProtocol;
- (void)setSecurityProcol:fp12;
- preferredAuthScheme;
- (void)setPreferredAuthScheme:fp12;
- saslProfileName;
- (Class)connectionClass;
- (BOOL)requiresAuthentication;
- authenticatedConnectionWithErrorMessage:(id *)fp12;
- (char)_connectAndAuthenticate:fp12 errorMessage:(id *)fp16;

@end

@interface Account(Applescript)
- (int)accountType;
- (void)setAccountPassword:fp12;
- accountPassword;
- (void)setServerName:fp12;
- serverName;
- (void)setLoginName:fp12;
- loginName;
- (void)setAccountName:fp12;
- accountName;
- (int)customAuthentication;
- (void)setCustomAuthentication:(int)fp12;
@end

@interface MailAccount:Account
{
    NSString *_path;
    MailboxUid *_rootMailboxUid;

//    struct ? _flags;
    int _flags;
    MailboxUid *inboxMailboxUid;
    MailboxUid *_draftsMailboxUid;
    MailboxUid *_sentMessagesMailboxUid;
    MailboxUid *_trashMailboxUid;
    MailboxUid *_junkMailboxUid;
}

+ (void)initialize;
+ (char)useSpecialMailboxes;
+ (char)mailboxListingNotificationAreEnabled;
+ (void)disableMailboxListingNotifications;
+ (void)enableMailboxListingNotifications;
+ (char)haveAccountsBeenConfigured;
+ (void)_addAccountToSortedPaths:fp12;
+ mailAccounts;
+ (void)setMailAccounts:fp12;
+ (void)_removeAccountFromSortedPaths:fp12;
+ activeAccounts;
+ (void)saveAccountInfoToDefaults;
+ allEmailAddressesIncludingFullUserName:(char)fp12;
+ _accountContainingEmailAddress:fp12 matchingAddress:(id *)fp16 fullUserName:(id *)fp20;
+ accountContainingEmailAddress:fp12;
+ accountThatMessageIsFrom:fp12;
+ accountThatReceivedMessage:fp12 matchingEmailAddress:(id *)fp16 fullUserName:(id *)fp20;
+ outboxMessageStore:(char)fp12;
+ specialMailboxUids;
+ _specialMailboxUidsUsingSelector:(SEL)fp12;
+ inboxMailboxUids;
+ trashMailboxUids;
+ outboxMailboxUids;
+ sentMessagesMailboxUids;
+ draftMailboxUids;
+ junkMailboxUids;
+ allMailboxUids;
+ accountWithPath:fp12;
+ newAccountWithPath:fp12;
+ createAccountWithDictionary:fp12;
+ defaultPathForAccountWithHostname:fp12 username:fp16;
+ defaultAccountDirectory;
+ defaultPathNameForAccountWithHostname:fp12 username:fp16;
+ defaultDeliveryAccount;
+ (char)isAnyAccountOffline;
+ (void)_setOnlineStateOfAllAccountsTo:(char)fp12;
+ (void)disconnectAllAccounts;
+ (void)connectAllAccounts;
+ (void)saveStateForAllAccounts;
+ (void)resortMailboxPaths;
+ mailboxUidForFileSystemPath:fp12 create:(char)fp16;
- (char)isValidAccountWithErrorTitle:(id *)fp12 errorString:(id *)fp16 accountBeingEdited:fp20 userCanOverride:(char *)fp24;
- (char)cheapStoreAtPathIsEmpty:fp12;
- init;
- initWithPath:fp12;
- (void)dealloc;
- path;
- (void)setPath:fp12;
- tildeAbbreviatedPath;
- applescriptFullUserName;
- (void)setApplescriptFullUserName:fp12;
- fullUserName;
- (void)setFullUserName:fp12;
- deliveryAccount;
- (void)setDeliveryAccount:fp12;
- firstEmailAddress;
- emailAddresses;
- applescriptEmailAddresses;
- (void)setApplescriptEmailAddresses:fp12;
- (void)setEmailAddresses:fp12;
- (BOOL)shouldAutoFetch;
- (void)setShouldAutoFetch:(BOOL)flag;
- (char)fileManager:fp12 shouldProceedAfterError:fp16;
- (void)_synchronouslyInvalidateAndDelete:(char)fp12;
- (void)deleteAccount;
- (void)saveState;
- (BOOL)canGoOffline;
- (void)releaseAllConnections;
- (void)setIsOffline:(char)fp12;
- (BOOL)canFetch;
- defaultsDictionary;
- (void)nowWouldBeAGoodTimeToStartBackgroundSynchronization;
- (char)canAppendMessages;
- (void)fetchAsynchronously;
- (void)fetchSynchronously;
- (char)isFetching;
- (void)newMailHasBeenReceived;
- primaryMailboxUid;
- rootMailboxUid;
- draftsMailboxUidCreateIfNeeded:(char)fp12;
- junkMailboxUidCreateIfNeeded:(char)fp12;
- sentMessagesMailboxUidCreateIfNeeded:(char)fp12;
- trashMailboxUidCreateIfNeeded:(char)fp12;
- allMailboxUids;
- (void)setDraftsMailboxUid:fp12;
- (void)setTrashMailboxUid:fp12;
- (void)setJunkMailboxUid:fp12;
- (void)setSentMessagesMailboxUid:fp12;
- (void)deleteMessagesFromMailboxUid:(MailboxUid*)fp12 olderThanNumberOfDays:(unsigned int)fp16 compact:(BOOL)fp20;
- (void)_setEmptyFrequency:(int)fp12 forKey:fp16;
- (int)_emptyFrequencyForKey:fp12 defaultValue:fp16;
- (int)emptySentMessagesFrequency;
- (void)setEmptySentMessagesFrequency:(int)fp12;
- (int)emptyJunkFrequency;
- (void)setEmptyJunkFrequency:(int)fp12;
- (int)emptyTrashFrequency;
- (void)setEmptyTrashFrequency:(int)fp12;
- (char)shouldMoveDeletedMessagesToTrash;
- (void)setShouldMoveDeletedMessagesToTrash:(char)fp12;
- (void)emptySpecialMailboxesThatNeedToBeEmptiedAtQuit;
- displayName;
- displayNameForMailboxUid:fp12;
- (BOOL)containsMailboxes;
- (void)resetSpecialMailboxes;
- mailboxPathExtension;
- (char)canCreateNewMailboxes;
- (char)newMailboxNameIsAcceptable:fp12 reasonForFailure:(id *)fp16;
- (char)canMailboxBeRenamed:fp12;
- (char)canMailboxBeDeleted:fp12;
- createMailboxWithParent:fp12 name:fp16 reasonForFailure:(id *)fp20;
- (char)renameMailbox:fp12 newName:fp16 parent:fp20 reasonForFailure:(id *)fp24;
- (char)deleteMailbox:fp12 reasonForFailure:(id *)fp16;
- (void)deleteMailboxUidIfEmpty:fp12;
- errorStringWithMessage:fp12 mailbox:fp16;
- (void)accountInfoDidChange;
- (void)postUserInfoHasChangedForMailboxUid:fp12;
- storeForMailboxUid:fp12;
- (Class)storeClass;
- (void)setUnreadCount:(unsigned int)fp12 forMailbox:fp16;
- (char)hasUnreadMail;
- mailboxUidForRelativePath:fp12 create:(char)fp16;
- valueInMailboxesWithName:fp12;
- objectSpecifierForMessageStore:fp12;
- objectSpecifierForMailboxUid:fp12;
- objectSpecifier;

@end

@interface MailAccount(Internal)
+ _accountWithPath:fp12;
+ (void)_postMailAccountsHaveChanged;
+ (void)_setOutboxMailboxUid:fp12;
+ _outboxMailboxUid;
- (char)_setPath:fp12;
- (void)setIsActive:(char)fp12;
- _pathComponentForUidName:fp12;
- _uidNameForPathComponent:fp12;
- (void)_readCustomInfoFromMailboxCache:fp12;
- (void)_writeCustomInfoToMailboxCache:fp12;
- _copyMailboxUidWithParent:fp12 name:fp16 attributes:(unsigned int)fp20 existingMailboxUid:fp24;
- (void)_synchronouslyLoadListingForParent:fp12;
- (void)_loadMailboxListingIntoCache:fp12 attributes:(unsigned int)fp16 parent:fp20;
- (char)_usesMailboxCache;
- (void)_synchronizeMailboxListWithFileSystem;
- (void)_loadEntriesFromFileSystemPath:fp12 parent:fp16;
- (void)_writeMailboxCacheWithPrejudice:(char)fp12;
- _insertMailbox:(MailboxUid*)mailbox intoParent: (MailboxUid*) parent withName: (NSString*)name reasonForFailure:(id *)reason;
- (void)_setChildren:fp12 forMailboxUid:fp16;
- (char)_deleteMailbox:fp12 reasonForFailure:(id *)fp16;
- description;
- (void)_fetchSynchronouslyIfNeeded;
- (void)_backgroundFetchCompleted;
- (void)_emptySpecialMailboxesIfNeeded;
- (void)_emptySpecialMailboxesIfNeededForQuit:(char)fp12;
- _defaultSpecialMailboxNameForType:(int)fp12;
- (void)_assignSpecialMailboxToAppropriateIvar:fp12 forType:(int)fp16;
- (void)_setSpecialMailboxName:fp12 forType:(int)fp16;
- (void)_setSpecialMailbox:fp12 forType:(int)fp16;
- _specialMailboxNameForType:(int)fp12;
- _specialMailboxUidWithType:(int)fp12 create:(char)fp16;
- (char)_shouldLogDeleteActivity;
@end

@interface MailAccount(ScriptingSupport)
- mailboxes;
- (void)insertInMailboxes:fp12 atIndex:(unsigned int)fp16;
- (void)insertInMailboxes:fp12;
- (char)emptyTrashOnQuit;
- (void)setEmptyTrashOnQuit:(char)fp12;
- (char)emptySentMessagesOnQuit;
- (void)setEmptySentMessagesOnQuit:(char)fp12;
- (char)emptyJunkOnQuit;
- (void)setEmptyJunkOnQuit:(char)fp12;
@end

@interface IMAPAccount:MailAccount
{
    NSString *_separatorChar;
    struct __CFArray *_lastKnownCapabilities;
    struct __CFArray *_cachedConnections;
    unsigned int _readBufferSize;
    IMAPOperationCache *_offlineCache;
    char _lastConnectionFailed;
}

+ accountTypeString;
- (void)_readCustomInfoFromMailboxCache:fp12;
- (void)_writeCustomInfoToMailboxCache:fp12;
- (void)dealloc;
- (void)saveState;
- (Class)storeClass;
- mailboxPathExtension;
- (unsigned int)defaultPortNumber;
- (unsigned int)defaultSecurePortNumber;
- serviceName;
- secureServiceName;
- saslProfileName;
- (char)requiresAuthentication;
- (Class)connectionClass;
- (char)compactWhenClosingMailboxes;
- (void)setCompactWhenClosingMailboxes:(char)fp12;
- (void)setCachePolicy:(int)fp12;
- (int)cachePolicy;
- (char)storeDraftsOnServer;
- (void)setStoreDraftsOnServer:(char)fp12;
- (char)storeJunkOnServer;
- (void)setStoreJunkOnServer:(char)fp12;
- (char)storeSentMessagesOnServer;
- (void)setStoreSentMessagesOnServer:(char)fp12;
- (char)storeTrashOnServer;
- (void)setStoreTrashOnServer:(char)fp12;
- primaryMailboxUid;
- (void)alertUserWithMessage:fp12 forMailbox:fp16;
- (unsigned int)readBufferSize;
- (void)setReadBufferSize:(unsigned int)fp12;
- (unsigned int)minimumPartialDownloadSize;
- (char)allowsPartialDownloads;
- (void)setAllowsPartialDownloads:(char)fp12;
- (char)connectAndAuthenticate:fp12;
- connectionForStore:fp12 delegate:fp16 createIfNeeded:(char)fp20;
- (void)checkInConnection:fp12;
- (void)unselectMailbox:fp12;
- (void)_releaseAllConnectionsAndCallSuper:(char)fp12;
- (void)releaseAllConnections;
- (void)_validateConnections;
- (void)validateConnections;
- (void)connectionDidDisconnect:fp12;
- (char)canGoOffline;
- (void)setIsOffline:(char)fp12;
- (void)setIsWillingToGoOnline:(char)fp12;
- (void)fetchSynchronously;
- separatorChar;
- lastKnownCapabilities;
- _listingForMailboxUid:fp12 listAllChildren:(char)fp16;
- createMailboxWithParent:fp12 name:fp16 reasonForFailure:(id *)fp20;
- (char)_deleteMailbox:fp12 reasonForFailure:(id *)fp16;
- (void)_setSpecialMailbox:fp12 forType:(int)fp16;
- _specialMailboxNameForType:(int)fp12;
- _specialMailboxUidWithType:(int)fp12 create:(char)fp16;
- (void)nowWouldBeAGoodTimeToStartBackgroundSynchronization;
- (void)_fetchUnreadCountsForMailboxUid:fp12 recursively:(char)fp16 connection:fp20;
- (void)_synchronizeAccountWithServer;
- _copyMailboxUidWithParent:fp12 name:fp16 attributes:(unsigned int)fp20 existingMailboxUid:fp24;
- (void)_synchronouslyLoadListingForParent:fp12;
- (char)renameMailbox:fp12 newName:fp16 parent:fp20 reasonForFailure:(id *)fp24;
- _pathComponentForUidName:fp12;
- _uidNameForPathComponent:fp12;
- _nameForMailboxUid:fp12;
- _mailboxUidForName:fp12;
- (char)canMailboxBeDeleted:fp12;
- serverPathPrefix;
- (void)setServerPathPrefix:fp12;
- (void)deleteMessagesFromMailboxUid:fp12 olderThanNumberOfDays:(unsigned int)fp16 compact:(char)fp20;
- offlineCache;

@end

@interface IMAPAccount(ScriptingSupport)
- (int)messageCaching;
- (void)setMessageCaching:(int)fp12;
@end

@interface POPAccount:MailAccount
{
    POP3FetchStore *_fetcher;
    ActivityMonitor *_fetchMonitor;
    char _fetcherNeedsReset;
}

+ accountTypeString;
- (void)dealloc;
- (void)fetchSynchronously;
- (void)resetFetcher;
- (void)releaseAllConnections;
- (unsigned int)defaultPortNumber;
- (unsigned int)defaultSecurePortNumber;
- serviceName;
- secureServiceName;
- saslProfileName;
- (char)requiresAuthentication;
- (Class)storeClass;
- (Class)connectionClass;
- storeForMailboxUid:fp12;
- mailboxPathExtension;
- (char)_usesMailboxCache;
- primaryMailboxUid;
- (char)usedToBeConfiguredForLocalINBOX;
- trashMailboxUidCreateIfNeeded:(char)fp12;
- (void)deleteMessagesFromMailboxUid:fp12 olderThanNumberOfDays:(unsigned int)fp16 compact:(char)fp20;
- (char)canCreateNewMailboxes;
- (char)canMailboxBeRenamed:fp12;
- (char)_setPath:fp12;
- (char)deleteMessagesOnServer;
- (void)setDeleteMessagesOnServer:(char)fp12;
- (int)bigMessageWarningSize;
- (void)setBigMessageWarningSize:(int)fp12;
- (void)setMessageDeletionPolicy:(int)fp12;
- (void)setDelayedMessageDeletionInterval:(unsigned int)fp12;
- (int)messageDeletionPolicy;
- (unsigned int)delayedMessageDeletionInterval;
- (void)deleteSeenMessagesNow;

@end

@interface POPAccount(Applescript)
- (char)deleteMessagesWhenMovedFromInbox;
- (void)setDeleteMessagesWhenMovedFromInbox:(char)fp12;
@end

@interface LocalAccount:MailAccount
{
}

+ localAccount;
+ accountTypeString;
- initWithPath:fp12;
- (Class)storeClass;
- mailboxPathExtension;
- primaryMailboxUid;
- (void)setPath:fp12;
- displayName;
- (void)setHostname:fp12;
- (void)setUsername:fp12;
- password:(char)fp12;
- (void)setPassword:fp12;
- (char)canFetch;
- (char)shouldAutoFetch;
- (char)isOffline;
- (void)setIsOffline:(char)fp12;
- (void)_synchronouslyLoadListingForParent:fp12;
- _copyMailboxUidWithParent:fp12 name:fp16 attributes:(unsigned int)fp20 existingMailboxUid:fp24;
- createMailboxWithParent:fp12 name:fp16 reasonForFailure:(id *)fp20;
- (char)renameMailbox:fp12 newName:fp16 parent:fp20 reasonForFailure:(id *)fp24;

@end

@interface NSMailDelivery:NSObject
{
}

+ (char)deliverMessage:fp12 headers:fp16 format:fp20 protocol:fp24;
+ (char)deliverMessage:fp12 subject:fp16 to:fp20;
+ (char)hasDeliveryClassBeenConfigured;

@end

@interface MailDelivery:NSObject
{
    id _delegate;
    Message *_message;
    MailAccount *_archiveAccount;
    DeliveryAccount *_account;
    int _askForReadReceipt:1;
    int _threaded:1;
    int _status:4;
    int __UNUSED__:25;
}

+ newWithMessage:fp12;
+ (char)deliverMessage:fp12 askForReadReceipt:(char)fp16;
+ (char)deliverMessage:fp12;
+ (char)returnMessageToSender:fp12;
- initWithMessage:fp12;
- (void)dealloc;
- message;
- delegate;
- (void)setDelegate:fp12;
- archiveAccount;
- (void)setArchiveAccount:fp12;
- account;
- (void)setAccount:fp12;
- (char)askForReadReceipt;
- (void)setAskForReadReceipt:(char)fp12;
- (int)deliveryStatus;
- (void)deliverAsynchronously;
- (int)deliverSynchronously;
- (int)deliverSynchronouslySpecifyingReasonForFailure:(id *)fp12;
- (void)prepareToDeliver;
- (void)deliverMessageData:fp12 toRecipients:fp16;

@end

@interface DeliveryAccount:Account
{
}

+ deliveryAccounts;
+ (void)setDeliveryAccounts:fp12;
+ (void)addDeliveryAccount:fp12;
+ (void)saveAccountInfoToDefaults;
+ accountWithIdentifier:fp12;
+ accountWithHostname:fp12 username:fp16;
+ newDefaultInstance;
- (Class)deliveryClass;
- identifier;
- (char)shouldUseAuthentication;
- (void)setShouldUseAuthentication:(char)fp12;

@end

@interface SMTPDelivery:MailDelivery
{
    SMTPConnection *_connection;
}

- (Class)deliveryClass;
- (void)deliverMessageData:fp12 toRecipients:fp16;

@end

@interface SMTPConnection:Connection
{
    int _lastResponseCode:31;
    int _hideLoggedData:1;
    id _lastResponse;
    NSMutableArray *_serviceExtensions;
    NSMutableData *_mdata;
    NSString *_domainName;
    int _originalSocketTimeout;
}

+ (void)initialize;
- init;
- (void)dealloc;
- (int)state;
- lastResponse;
- domainName;
- (void)setDomainName:fp12;
- authenticationMechanisms;
- (BOOL)authenticateUsingAccount:fp12 errorMessage:(id *)fp16;
- (BOOL)authenticateUsingAccount:fp12 authenticator:fp16 errorMessage:(id *)fp20;
- (BOOL)connectUsingAccount:fp12 errorMessage:(id *)fp16;
- (int)mailFrom:fp12;
- (int)rcptTo:fp12;
- (int)sendData:fp12;
- (int)quit;

@end

@interface SMTPConnection(PrivateCommands)
- (int)_sendCommand:(const STR)fp12 length:(unsigned int)fp16 argument:fp20 trailer:(const unsigned char)fp24;
- (int)_getReply;
- (void)_readResponseRange:(struct _NSRange *)fp12 isContinuation:(char *)fp16;
- (char)_connectUsingAccount:fp12 errorMessage:(id *)fp16;
- (int)_doHandshakeUsingAccount:fp12 errorMessage:(id *)fp16;
- (char)_hasParameter:fp12 forKeyword:fp16;
@end

@interface SMTPAccount:DeliveryAccount
{
}

+ accountTypeString;
+ newDefaultInstance;
- (Class)deliveryClass;
- (unsigned int)defaultPortNumber;
- serviceName;
- saslProfileName;
- (Class)connectionClass;
- preferredAuthScheme;
- (void)setPreferredAuthScheme:fp12;
- authenticatedConnectionForDomain:fp12 errorMessage:(id *)fp16;

@end

@interface SMTPAccount(Applescript)
- displayName;
- objectSpecifier;
@end

@interface ActivityMonitor:NSObject
{
    NSPort *_cancelPort;
    NSString *_taskName;
    NSString *_statusMessage;
    NSString *_descriptionString;
    double _percentDone;
    int _key:13;
    int _canCancel:1;
    int _shouldCancel:1;
    int _isActive:1;
    int _priority:8;
    int _changeCount:8;
    id _delegate;
    id _target;
}

+ currentMonitor;
- init;
- (void)dealloc;
- (char)isActive;
- (void)setDelegate:fp12;
- (void)postActivityStarting;
- (void)handlePortMessage:fp12;
- (void)postActivityFinished;
- (void)_didChange;
- (int)changeCount;
- (void)setStatusMessage:fp12;
- (void)setStatusMessage:fp12 percentDone:(double)fp40;
- statusMessage;
- (void)setPercentDone:(double)fp40;
- (double)percentDone;
- (unsigned char)priority;
- (void)setPriority:(unsigned char)fp12;
- description;
- taskName;
- (void)setTaskName:fp12;
- (void)setActivityTarget:fp12;
- activityTarget;
- (char)canBeCancelled;
- (void)setCanBeCancelled:(char)fp12;
- (char)shouldCancel;
- (void)setShouldCancel:(char)fp12;
- (void)cancel;
- (int)acquireExclusiveAccessKey;
- (void)relinquishExclusiveAccessKey:(int)fp12;
- (void)setStatusMessage:fp12 percentDone:(double)fp40 withKey:(int)fp24;
- (void)setStatusMessage:fp12 withKey:(int)fp16;
- (void)setPercentDone:(double)fp40 withKey:(int)fp20;

@end

@interface ByteSet:NSObject <NSCopying, NSMutableCopying>
{
    char mySet[32];
}

+ asciiWhitespaceSet;
+ ASCIIByteSet;
+ nonASCIIByteSet;
+ suspiciousCodepage1252ByteSet;
- (char)byteIsMember:(char)fp12;
- invertedSet;
- initWithRange:(struct _NSRange)fp12;
- initWithCString:(const STR)fp12;
- initWithBytes:(const void *)fp12 length:(unsigned int)fp16;
- _initWithSet:(const STR)fp12;
- copyWithZone:(struct _NSZone *)fp12;
- mutableCopyWithZone:(struct _NSZone *)fp12;

@end

@interface MutableByteSet:ByteSet
{
}

- (void)addBytesInRange:(struct _NSRange)fp12;
- (void)removeBytesInRange:(struct _NSRange)fp12;
- (void)invert;

@end

@interface DataScanner:NSObject
{
    NSData *myData;
    unsigned int myLocation;
}

+ scannerWithData:fp12;
- (void)setData:fp12;
- (void)dealloc;
- data;
- (unsigned int)scanLocation;
- (void)setScanLocation:(unsigned int)fp12;
- (char)scanByte:(STR)fp12;
- (char)scanInt:(int *)fp12;
- (char)scanData:fp12 intoData:(id *)fp16;
- (char)scanCString:(const STR)fp12 intoData:(id *)fp16;
- (char)scanBytesFromSet:fp12 intoData:(id *)fp16;
- (void)incrementLocation;
- (char)scanUpToData:fp12 intoData:(id *)fp16;
- (char)scanUpToCString:(const STR)fp12 intoData:(id *)fp16;
- (char)scanUpToBytesFromSet:fp12 intoData:(id *)fp16;
- (char)isAtEnd;
- (char)byteAtScanLocation;
- nextTokenWithPunctuation:fp12;
- initWithData:fp12;

@end

@interface Defaults:NSObject
{
    NSUserDefaults *defaults;
}

+ sharedInstance;
- primaryEmailAddress;
- (void)setPrimaryEmailAddress:fp12;
- fullUserName;
- (void)setFullUserName:fp12;
- (int)headerDetailLevel;
- (void)setHeaderDetailLevel:(int)fp12;
- _regexesForCustomDisplayedHeaders;
- headersToDisplayFromHeaderKeys:fp12 headerDetailLevel:(int)fp16;
- customDisplayedHeaders;
- (void)setCustomDisplayedHeaders:fp12;
- (int)sendFormat;
- (void)setSendFormat:(int)fp12;
- mailAccountDirectory;
- (void)setDefaultMailDirectory:fp12;
- defaultMailDirectory;
- archiveMailbox;
- draftsMailbox;
- trashMailboxName;
- (char)autosaveWindows;
- (void)setAutosaveWindows:(char)fp12;
- quotingColorList;
- (void)setQuotingColorList:fp12;
- colorForQuoteLevel:(int)fp12;
- alternateAddressesForSelf;
- dictionaryForKey:fp12;
- stringForKey:fp12;
- (void)removeObjectForKey:fp12;
- (void)setObject:fp12 forKey:fp16;
- objectForKey:fp12;
- (void)setBool:(char)fp12 forKey:fp16;
- (char)boolForKey:fp12;
- (int)integerForKey:fp12;
- (char)synchronize;

@end

@interface NSArray(NSEmailAddressArray)
- uncommentedAddressList;
@end

@interface NSString(NSEmailAddressString)
- uncommentedAddress;
- uncommentedAddressRespectingGroups;
- addressComment;
- (void)firstName:(id *)fp12 lastName:(id *)fp16;
- addressList;
- (char)isLegalEmailAddress;
@end

@interface NSMutableDictionary(Goodies)
- (void)setBool:(char)fp12 forKey:fp16;
- (void)setInteger:(int)fp12 forKey:fp16;
@end

@interface NSDictionary(Goodies)
- (char)boolForKey:fp12;
- (int)integerForKey:fp12;
@end

@interface NSTimeZone(HowAboutSomeNiceCaching)
+ timeZoneWithAbbreviation:fp12;
+ timeZoneWithName:fp12;
+ timeZoneForSecondsFromGMT:(int)fp12;
@end

@interface NSDate(Goodies)
+ dateInCommonFormatsWithString:fp12;
- descriptionInBSDMailboxFormat;
@end

@interface NSFileWrapper(HFSDataConversion)
- appleSingleDataWithFilename:(const STR)fp12 length:(unsigned int)fp16;
- appleDoubleDataWithFilename:(const STR)fp12 length:(unsigned int)fp16;
@end

@interface NSData(HFSDataConversion)
- wrapperForAppleFileDataWithFileEncodingHint:(unsigned int)fp12;
- wrapperForBinHex40DataWithFileEncodingHint:(unsigned int)fp12;
@end

@interface InvocationQueue:NSObject
{
    NSMutableArray *_items;
    int _maxThreads:16;
    int _numThreads:16;
}

- init;
- (void)setMaxThreadCount:(unsigned int)fp12;
- (unsigned int)maxThreadCount;
- (void)dealloc;
- (void)removeAllItems;
- (void)_drainQueue;
- (void)addInvocation:fp12;
- (unsigned int)invocationCount;

@end

@interface MainThread:NSObject
{
    NSMachPort *_ticklePort;
    NSMutableArray *_requests;
}

+ (void)setupMainThreadObject;
+ mainThread;
+ (char)runningOnMainThread;
- init;
- (char)_runningOnMainThread;
- (void)performOneway:(char)fp12 result:(void *)fp16 withTarget:fp20 selector:(SEL)fp24;
- (void)_postNotificationInMainThread:fp12;
- (void)_threadWillDie:fp12;
- (void)handlePortMessage:fp12;

@end

@interface NSNotificationCenter(MainThreadPosting)
- (void)postNotificationInMainThread:fp12;
@end

@interface NSObject(MainThreadMessaging)
- (void)performSelectorInMainThread:(SEL)fp12;
- (void)performSelectorInMainThread:(SEL)fp12 withObject:fp16;
- (void)performSelectorInMainThread:(SEL)fp12 withObject:fp16 withObject:fp20;
- (void)performOnewaySelectorInMainThread:(SEL)fp12 withObject:fp16;
- (void)performOnewaySelectorInMainThread:(SEL)fp12 withObject:fp16 withObject:fp20;
@end

@interface MonitoredInvocation:NSInvocation
{
    ActivityMonitor *_monitor;
}

+ invocationWithSelector:(SEL)fp12 target:fp16 taskName:fp20 priority:(unsigned char)fp24 canBeCancelled:(char)fp28;
+ invocationWithSelector:(SEL)fp12 target:fp16 object:fp20 taskName:fp24 priority:(unsigned char)fp28 canBeCancelled:(char)fp32;
+ invocationWithSelector:(SEL)fp12 target:fp16 object1:fp20 object2:fp24 taskName:fp28 priority:(unsigned char)fp32 canBeCancelled:(char)fp35;
- (void)dealloc;
- monitor;
- (void)setMonitor:fp12;
- (void)invoke;

@end

@interface NSInvocation(MailExtensions)
+ invocationWithSelector:(SEL)fp12 target:fp16;
+ invocationWithSelector:(SEL)fp12 target:fp16 object:fp20;
+ invocationWithSelector:(SEL)fp12 target:fp16 object1:fp20 object2:fp24;
+ invocationWithSelector:(SEL)fp12 target:fp16 object1:fp20 object2:fp24 object3:fp28;
@end

@interface NSArray(DateComparisonForRecents)
- (int)indexOfOldestDate;
@end

@interface NSArray(MessagesFromMixedStoresConvenience)
- dictionaryWithMessagesSortedByStore;
@end

@interface NSMutableArray(LockedAdditions)
- removeAndRetainLastObjectUsingLock;
- (void)addObjectsFromArrayUsingLock:fp12;
- (void)addObjectUsingLock:fp12;
- (void)addObjectUsingLockIfAbsent:fp12;
- (void)addObjectUsingLockIfAbsentAccordingToEquals:fp12;
@end

/*
@interface NSMutableArray(SortedArrayExtensions)
- (unsigned int)insertObject:fp12 usingSortFunction:(UNKNOWN *)fp16 context:(void *)fp20;
- (unsigned int)indexOfObject:fp12 usingSortFunction:(UNKNOWN *)fp16 context:(void *)fp20;
@end
*/

/*
@interface NSMutableArray(Convenience)
- (char)insertObjectIfAbsent:fp12 usingSortFunction:(UNKNOWN *)fp16 context:(void *)fp20;
- (void)addObjectIfAbsent:fp12;
- (void)addObjectIfAbsentAccordingToEquals:fp12;
@end
*/

@interface NSArray(DerivedArray)
- arrayByApplyingSelector:(SEL)fp12;
@end

@interface NSArray(removeSelf)
- componentsJoinedByData:fp12;
@end

@interface NSMutableAttributedString(MessageFrameworkAdditions)
- (void)fixHTMLAttributesInRange:(struct _NSRange)fp12;
- (void)replaceCustomAttachmentAttributesWithAttachments:fp12 confirmWithView:fp16;
- (void)_removeAttachmentsAndReplaceWithCustomAttribute:(char)fp12;
- (void)removeAllAttachmentsAndReplaceWithCustomAttachmentAttribute;
- (void)removeAllAttachments;
- (void)removeAllFormattingExceptAttachments;
- (void)removeQuotingDisplayAttributesInRange:(struct _NSRange)fp12;
- (void)fixQuotingDisplayAttributesInRange:(struct _NSRange)fp12;
- (void)changeQuoteLevelInRange:(struct _NSRange)fp12 by:(int)fp20 undoManager:fp24;
@end

@interface NSAttributedString(FontAdditions)
+ (void)resetHeaderAttributes;
+ boldHeaderAttributes;
+ headerAttributes;
+ fixedPitchAttributes;
@end

@interface NSAttributedString(lockedRTFParsing)
+ lockedAttributedStringFromRTFDFile:fp12;
- (char)lockedWriteRTFDToFile:fp12 atomically:(char)fp16;
@end

@interface NSAttributedString(MessagePasteboardSupport)
+ attributedStringFromMessageData:fp12;
- messageDataForRange:(struct _NSRange)fp12;
@end

@interface NSAttributedString(AddressingSupport)
- addressAtIndex:(int)fp12;
- addressListForRange:(struct _NSRange)fp12;
@end

@interface NSAttributedString(find_attribute)
- nextAttribute:fp12 fromLocation:(unsigned int)fp16 effectiveRange:(struct _NSRange *)fp20;
@end

@interface NSAttributedString(plain_or_rich)
- attachments;
- attachmentsInRange:(struct _NSRange)fp12;
- (struct _NSRange)rangeOfAttachment:fp16;
- (char)containsAttachments;
- (char)containsRichTextInRange:(struct _NSRange)fp12;
- (char)containsRichText;
@end

@interface NSAttributedString(IndexingSupport)
- stringForIndexing;
@end

@interface MimeTextAttachment(IndexingSupport)
- stringForIndexing;
@end

@interface NSTextAttachment(IndexingSupport)
- stringForIndexing;
@end

@interface NSCharacterSet(NSCharacterSetUtils)
+ goodFileCharacterSet;
@end

@interface NSColor(NSColorUtilities)
+ allQuotingColors;
+ defaultQuotingColors;
+ allHighlightColors;
+ colorPlist;
+ (int)intWithIdentifierColor:fp12;
+ identifierForColor:fp12;
+ colorForIdentifier:fp12;
+ (void)_configureColorMenuForBoneHeadClients:fp12;
+ (void)configureColorMenu:fp12;
+ createSwatchForColor:fp12;
+ colorWithIntValue:(int)fp12;
+ threadHighlightColor;
+ (void)setThreadHighlightColor:fp12;
+ junkMailColor;
- (int)intValue;
@end

@interface NSMutableData(NSDataUtils)
- (void)appendCString:(const STR)fp12;
- (void)appendByte:(char)fp12;
- (void)convertNetworkLineEndingsToUnix;
@end

@interface NSData(NSDataUtils)
- unquotedFromSpaceDataWithRange:(struct _NSRange)fp12;
- quotedFromSpaceDataForMessage;
- (struct _NSRange)rangeOfRFC822HeaderData;
- subdataToIndex:(unsigned int)fp12;
- subdataFromIndex:(unsigned int)fp12;
- (struct _NSRange)rangeOfData:fp16;
- (struct _NSRange)rangeOfData:fp16 options:(unsigned int)fp20;
- (struct _NSRange)rangeOfData:fp16 options:(unsigned int)fp20 range:(struct _NSRange)fp24;
- (struct _NSRange)rangeOfByteFromSet:fp16;
- (struct _NSRange)rangeOfByteFromSet:fp16 options:(unsigned int)fp20;
- (struct _NSRange)rangeOfByteFromSet:fp16 options:(unsigned int)fp20 range:(struct _NSRange)fp24;
- (struct _NSRange)rangeOfCString:(const STR)fp16;
- (struct _NSRange)rangeOfCString:(const STR)fp16 options:(unsigned int)fp20;
- (struct _NSRange)rangeOfCString:(const STR)fp16 options:(unsigned int)fp20 range:(struct _NSRange)fp24;
- componentsSeparatedByData:fp12;
- dataByConvertingUnixNewlinesToNetwork;
@end

@interface NSFileHandle(MessageAdditions)
+ createFileAtPath:fp12 flags:(int)fp16 mode:(int)fp20;
+ fileHandleForUniqueFile:(id *)fp12 atPath:fp16 mode:(int)fp20 extension:fp24;
+ fileHandleForUniqueFile:(id *)fp12 atPath:fp16 mode:(int)fp20;
- (char)writeLossyString:fp12;
- (char)writeBytes:(const STR)fp12 length:(int)fp16;
@end

@interface NSFileManager(NSFileManagerAdditions)
- (char)makeCompletePath:fp12 mode:(int)fp16;
- (char)canWriteToDirectoryAtPath:fp12;
- (char)canWriteToFileAtPath:fp12;
- (void)deleteFilesInArray:fp12 fromDirectory:fp16;
@end

@interface PlaceholderFileWrapper:NSFileWrapper
{
}

- (char)isPlaceholder;

@end

@interface HFSFileWrapper:NSFileWrapper
{
}

+ (void)load;
+ allocWithZone:(struct _NSZone *)fp12;
- (void)dealloc;
- (char)setUpHFSAttributesAtPath:fp12;
- (char)writeToFile:fp12 atomically:(char)fp16 updateFilenames:(char)fp20;
- initWithPath:fp12;
- (void)setPreferredFilename:fp12;
- icon;
- iconCreateIfNecessary:(char)fp12;
- tmpFullPath;
- (char)isPlaceholder;

@end

@interface NSFileWrapper(HFSExtensions)
- (void)setResourceForkData:fp12;
- resourceForkData;
- (void)setType:(unsigned int)fp12;
- (unsigned int)type;
- (void)setCreator:(unsigned int)fp12;
- (unsigned int)creator;
- (void)setFinderFlags:(unsigned short)fp12;
- (unsigned short)finderFlags;
- (void)setShouldHideExtension:(char)fp12;
- (char)shouldHideExtension;
- (void)setMimeType:fp12;
- mimeType;
- (void)setShouldBeViewedInline:(char)fp12;
- (char)shouldBeViewedInline;
- (char)isImageFile;
- preferredFilenameWithoutHiddenExtension;
@end

@interface _MFObjectLock:NSObject
{
    struct _opaque_pthread_t *lockingThread;
    struct _opaque_pthread_cond_t condition;
    int acquiredCount:16;
}

- init;
- (void)dealloc;
- (void)lock;
- (char)tryLock;
- (void)unlockForObject:fp12;
- (void)yieldForObject:fp12;
- (void)forceUnlockForObject:fp12;

@end

@interface _MFPriorityLock:_MFObjectLock
{
    struct __CFArray *waiters;
}

- (void)dealloc;
- (void)lock;
- (char)tryLock;
- (void)unlockForObject:fp12;
- (void)yieldForObject:fp12;
- (void)forceUnlockForObject:fp12;
- description;

@end

@interface _MFRecursiveLock:_MFObjectLock
{
    int requestedCount:16;
}

- (void)lock;
- (char)tryLock;
- (void)unlockForObject:fp12;
- (void)forceUnlockForObject:fp12;
- description;

@end

@interface NSLock(MessageAdditions)
- (void)waitForLock;
@end

@interface NSObject(LockingAdditions)
+ (void)clearLocks;
- (void)lock;
- (char)tryLock;
- lockWithPriority;
- (char)tryLockWithPriority;
- (void)unlock;
- (void)yieldLock;
- (char)isLocked;
@end

@interface NSScanner(NSScannerUtils)
- (char)scanStringOfLength:(unsigned int)fp12 intoString:(id *)fp16;
- (char)betterScanUpToCharactersFromSet:fp12 intoString:(id *)fp16;
- (char)scanEndIntoString:(id *)fp12;
- nextTokenWithPunctuation:fp12;
- (char)scanUpAndOverString:fp12;
@end

/*
@interface _NSSocket:NSObject
{
    struct __CFReadStream *_readStream;
    struct __CFWriteStream *_writeStream;
    struct ? _streamError;
    NSString *_protocol;
    void *_stuff;
    int _numTimeoutSecs:16;
    float _lastReadTime;
}

+ (void)initialize;
- securityProtocol;
- (void)setSecurityProtocol:fp12;
- initWithTimeout:(int)fp12;
- init;
- (int)timeout;
- (void)setTimeout:(int)fp12;
- (void)dealloc;
- (void)abort;
- (char)isReadable;
- (char)isWritable;
- (char)isValid;
- (char)connectToHost:fp12 withPort:(unsigned int)fp16 protocol:fp20;
- (char)connectToHost:fp12 withService:fp16 protocol:fp20;
- (int)writeBytes:(const STR)fp12 length:(int)fp16;
- (int)readBytes:(STR)fp12 length:(int)fp16;
- savedHostname;
- sourceIPAddress;
- (struct ?)streamError;
- (int)fileDescriptor;
- (float)lastReadTime;

@end
*/

@interface NSMutableString(convenience)
- (void)replaceString:fp12 withString:fp16;
@end

@interface NSString(next_reference)
- _nextReferenceName;
@end

@interface NSString(NSStringUtils)
+ stringWithData:fp12 encoding:(unsigned int)fp16;
+ stringRepresentationForBytes:(long long)fp12;
- (char)boolValue;
- smartCapitalizedString;
- stringByReplacingString:fp12 withString:fp16;
- stringByLocalizingReOrFwdPrefix;
- (unsigned int)subjectPrefixLength;
- fileSystemString;
- stringWithNoExtraSpaces;
@end

@interface NSTask(NSTaskAdditions)
+ (char)runPipe:fp12 withInputFrom:fp16 andOutputTo:fp20;
+ (char)runPipe:fp12 withInputFrom:fp16;
+ (char)runPipe:fp12 withOutputTo:fp16;
@end

@interface NSString(PathUtils)
+ pathWithDirectory:fp12 filename:fp16 extension:fp20;
- uniquePathWithMaximumLength:(int)fp12;
- (char)deletePath;
- (char)makeDirectoryWithMode:(int)fp12;
- (char)makePathWritable:(int *)fp12;
- (char)makePathReadOnly:(int *)fp12;
- (void)setPosixFilePermissions:(int)fp12;
- (char)isSubdirectoryOfPath:fp12;
- stringByReallyAbbreviatingWithTildeInPath;
- betterStringByResolvingSymlinksInPath;
@end

@interface NSData(UuEnDeCode)
- uudecodedDataIntoFile:(id *)fp12 mode:(unsigned int *)fp16;
- uuencodedDataWithFile:fp12 mode:(unsigned int)fp16;
@end

@interface WorkerThread:NSThread
{
}

+ (void)initialize;
+ (void)addInvocationToQueue:fp12;
+ (void)_execute:fp12;

@end

@interface RegularExpression:NSObject <NSCopying, NSCoding>
{
    NSString *_expressionString;
    void *_reserved;
}

+ (void)initialize;
+ regularExpressionWithString:fp12;
+ (const STR)getBytesForString:fp12 lossByte:(unsigned char)fp16;
- (void)dealloc;
- initWithExpressionString:fp12;
- initWithExpressionString:fp12 options:(unsigned int)fp16;
- (unsigned int)numberOfSubexpressions;
- init;
- copyWithZone:(struct _NSZone *)fp12;
- (char)isEqual:fp12;
- (unsigned int)hash;
- expressionString;
- (struct _NSRange)matchedRangeForCString:(const STR)fp16 range:(struct _NSRange)fp20 subexpressionRanges:(struct _NSRange *)fp28 count:(unsigned int)fp32;
- (struct _NSRange)matchedRangeForString:fp16 range:(struct _NSRange)fp20 subexpressionRanges:(struct _NSRange *)fp28 count:(unsigned int)fp32;
- initWithCoder:fp12;
- (void)encodeWithCoder:fp12;

@end

@interface MessageAddressee:NSObject
{
    NSString *_displayName;
    NSString *_address;
    NSString *_type;
    id _message;
}

- initWithDisplayName:fp12 address:fp16 type:fp20 message:fp24;
- (void)dealloc;
- (char)isEqual:fp12;
- formattedAddress;
- displayName;
- (void)setDisplayName:fp12;
- address;
- (void)setAddress:fp12;
- _keyForType;
- objectSpecifier;
- (void)setMessage:fp12;

@end

@interface Message(ScriptingSupport)
- objectSpecifier;
- (char)isRead;
- (void)setIsRead:(char)fp12;
- (char)isJunk;
- (void)setIsJunk:(char)fp12;
- (char)isDeleted;
- (void)setIsDeleted:(char)fp12;
- subject;
- sender;
- replyTo;
- dateSent;
- dateReceived;
- scriptedMessageSize;
- content;
- (void)_addRecipientsForKey:fp12 toArray:fp16;
- recipients;
- toRecipients;
- ccRecipients;
- bccRecipients;
- container;
- (void)setContainer:fp12;
- messageIDHeader;
- rawSource;
- allHeaders;
@end

@interface MessageStore(ScriptingSupport)
- objectSpecifier;
- objectSpecifierForMessage:fp12;
@end

@interface POPMessage:Message
{
    int _messageNumber;
    NSString *_messageID;
    NSData *_messageData;
}

- initWithPOP3FetchStore:fp12;
- (void)dealloc;
- (int)messageNumber;
- (void)setMessageNumber:(int)fp12;
- messageData;
- (void)setMessageData:fp12;
- messageDataIncludingFromSpace:(char)fp12;
- messageID;
- (void)setMessageID:fp12;

@end

@interface iToolsAccount:IMAPAccount
{
    char _isPrimaryiToolsAccount;
}

+ defaultPathNameForAccountWithHostname:fp12 username:fp16;
+ primaryUsername;
+ iToolsMailHostname;
+ iToolsSMTPHostname;
+ accountTypeString;
- (char)isPrimaryiToolsAccount;
- (void)setIsPrimaryiToolsAccount:(char)fp12;
- (char)isActive;
- hostname;
- (void)setHostname:fp12;
- (void)setPortNumber:(unsigned int)fp12;
- (unsigned int)portNumber;
- (void)setUsername:fp12;
- (void)_setPasswordInKeychain:fp12;
- (void)_removePasswordInKeychain;
- passwordFromStoredUserInfo;
- displayName;
- username;
- emailAddresses;
- (void)setDeliveryAccount:fp12;
- deliveryAccount;

@end

/*
@interface NSKeychainManager(MessageAdditions)
+ (void)initialize;
- (unsigned int)_protocolForAccountType:fp12;
- passwordForHost:fp12 username:fp16 port:(int)fp20 protocol:fp24;
- (void)setPassword:fp12 forHost:fp16 username:fp20 port:(int)fp24 protocol:fp28;
- (void)removePasswordForHost:fp12 username:fp16 port:(int)fp20 protocol:fp24;
- passwordForServiceName:fp12 accountName:fp16;
- (void)setPassword:fp12 forServiceName:fp16 accountName:fp20;
- (void)removePasswordForServiceName:fp12 accountName:fp16;
@end

@interface NSKeychainItem(MessageAdditions)
- (void)setLabel:fp12;
@end
*/

@interface MboxIndex:NSObject
{
    MessageStore *_store;
    struct OpaqueIAIndexRef *_iaIndex;
    struct OpaqueIADocKeyRef *_bodyParent;
    struct OpaqueIADocKeyRef *_headerParent;
//    struct ? _flags;
    int _flags;
}

+ (char)indexForMailboxIsValid:fp12;
+ (void)setIndexForMailbox:fp12 isValid:(char)fp16;
+ flagFilePathForMailbox:fp12;
+ (void)removeLeftoverIndexFilesForMailbox:fp12;
- _openVersionOfIndexPath:fp12;
- _validFlagFilePath;
- (void)_updateValidFlagFile;
- (char)_validFlagFileState;
- initWithStore:fp12 writeAccess:(char)fp16;
- (char)isValid;
- (void)setIsValid:(char)fp12;
- (char)hasWriteAccess;
- (void)dealloc;
- (char)update;
- (char)_shouldCompact;
- (char)flushToDisk;
- (char)_indexString:fp12 underParent:(struct OpaqueIADocKeyRef *)fp16 forMessageId:fp20;
- (void)addMessage:fp12 index:(unsigned int)fp16 ofTotal:(unsigned int)fp20;
- (void)_removeMessageByID:fp12;
- (void)removeMessage:fp12;
- (unsigned int)count;
- _sanitizeBooleanSearchString:fp12;
- messagesMatchingQuery:fp12 ranks:(id *)fp16 errorString:(id *)fp20;
- messageIDsMatchingQuery:fp12 ranks:(id *)fp16 errorString:(id *)fp20;

@end

@interface CIDURLHandle:NSURLHandle
{
    MimePart *_part;
    ActivityMonitor *_monitor;
}

+ (void)initialize;
+ (char)canInitWithURL:fp12;
+ cachedHandleForURL:fp12;
- initWithURL:fp12 cached:(char)fp16;
- (void)dealloc;
- mimePart;
- (void)setMimePart:fp12;
- loadInForeground;
- (void)_downloadDataFromStore:fp12;
- (void)_didCompleteDownloadWithData:fp12;
- (void)beginLoadInBackground;
- (void)flushCachedData;
- (void)endLoadInBackground;
- propertyForKey:fp12;
- propertyForKeyIfAvailable:fp12;
- (char)writeProperty:fp12 forKey:fp16;
- (char)writeData:fp12;

@end

@interface NSAttributedString(FormatFlowedSupport)
- (void)getFormatFlowedString:(id *)fp12 insertedTrailingSpaces:(char *)fp16;
@end

@interface NSString(FormatFlowedSupport)
- attributedStringForFlowedTextDeletingSpaces:(char)fp12;
- attributedStringForPlainText;
@end

@interface NetworkController:NSObject
{
    struct __SCDynamicStore *_store;
    NSString *_domainName;
    int _waitingForDialToFinish:1;
    int _checkedNetwork:1;
    int _isNetworkUp:1;
    NSTimer *_notificationTimer;
}

+ sharedInstance;
- (void)dealloc;
- init;
- (char)isNetworkUp;
- domainName;
- (char)isHostReachable:fp12;

@end

@interface NetworkController(Private)
- (void)_postNotification:fp12;
- (void)_postNetworkChangeNotification:fp12;
- (void)_triggerDialForHostname:fp12;
@end

@interface SASLAuthenticator:NSObject
{
    void *_context;
    AuthScheme *_authScheme;
    Account *_account;
    int _authenticationState;
}

- initWithAuthScheme:fp12 account:fp16 connection:fp20;
- (void)dealloc;
- authScheme;
- account;
- saslName;
- responseForServerData:fp12;
- (int)authenticationState;
- (void)setAuthenticationState:(int)fp12;
- (char)justSentPlainTextPassword;
- securityLayer;
- localAddress;
- remoteAddress;

@end

@interface LoginAuthenticator:SASLAuthenticator
{
    char _justSentPassword;
}

- saslName;
- responseForServerData:fp12;
- (char)justSentPlainTextPassword;

@end

@interface PlainAuthenticator:SASLAuthenticator
{
}

- saslName;
- responseForServerData:fp12;
- (char)justSentPlainTextPassword;

@end

/*
@interface PlainAuthScheme:AuthScheme
{
}

- (Class)authenticatorClassForAccount:fp12;
- authenticatorForAccount:fp12 connection:fp16;
- name;
- humanReadableName;

@end
*/

@interface CRAM_MD5Authenticator:SASLAuthenticator
{
}

- responseForServerData:fp12;

@end

/*
@interface CRAM_MD5AuthScheme:AuthScheme
{
}

- (Class)authenticatorClassForAccount:fp12;
- name;
- humanReadableName;
- (char)sendsPlainTextPasswords;

@end
*/

/*
@interface IMAPResponse:NSObject
{
    int _responseType:8;
    NSString *_tag;
    union _IMAPResponseData _data;
}

- (int)responseType;
- (void)setResponseType:(int)fp12;
- (char)isUntagged;
- tag;
- (void)setTag:fp12;
- (void)dealloc;
- (int)responseCode;
- responseInfo;
- userData;
- userString;
- (void)setUserData:fp12 responseCode:(int)fp16 responseInfo:fp20;
- capabilities;
- (void)setCapabilities:fp12;
- (unsigned long)number;
- (void)setNumber:(unsigned long)fp12;
- flags;
- (void)setFlags:fp12;
- mailboxName;
- statusEntries;
- (void)setMailboxName:fp12 statusEntries:fp16;
- searchResults;
- (void)setSearchResults:fp12;
- (unsigned long)mailboxAttributes;
- separator;
- (void)setMailboxAttributes:(unsigned long)fp12 separator:fp16 mailboxName:fp20;
- fetchResults;
- (void)setFetchResults:fp12;
- responseName;
- parameters;
- (void)setResponseName:fp12 parameters:fp16;
- description;
- initWithConnection:fp12;

@end
*/

@interface ObjectCache:NSObject
{
    unsigned int _arrayCapacity;
    struct __CFArray *_keysAndValues;
}

- initWithCapacity:(unsigned int)fp12;
- (void)dealloc;
- (void)setObject:fp12 forKey:fp16;
- objectForKey:fp12;
- (void)removeObjectForKey:fp12;
- (void)removeAllObjects;
- (char)isObjectInCache:fp12;

@end

/*
@interface MailboxUid(ScriptingSupport)
- objectSpecifier;
- messages;
- mailboxName;
- (void)setMailboxName:fp12;
@end
*/

@interface CompletionWindow:NSWindow
{
}

- (void)windowDidResignKey:fp12;
- (void)windowDidResignMain:fp12;
- (char)canBecomeKeyWindow;
- (char)canBecomeMainWindow;

@end

@interface MailAddressManager:NSObject
{
    ABAddressBook *_addressBook;
    NSMutableArray *_imageCache;
    NSMutableArray *_missingImageCache;
    NSLock *lockForRecordsMatching;
}

+ addressManager;
- init;
- (void)dealloc;
- loadAddressBookAsynchronously;
- (void)loadAddressBookSynchronously;
- (void)_importDidBegin:fp12;
- (void)_importDidUpdate:fp12;
- (void)_importDidEnd:fp12;
- (void)recordsMatchingDictionary:fp12;
- recordsMatchingFirstName:fp12 lastName:fp16 email:fp20 withOperator:(int)fp24;
- (char)addressBookPerson:fp12 nameMatchesFirst:fp16 last:fp20;
- (char)email:fp12 matchesEmail:fp16;
- betterRecordOfRecent:fp12 addressBook:fp16;
- groupsMatchingString:fp12;
- (void)updateDatesForRecentRecord:fp12;
- (void)_addAddresses:fp12 asRecent:(char)fp16;
- (void)addRecentAddresses:fp12;
- (void)addAddresses:fp12;
- (void)removeRecentRecord:fp12;
- addressBookRecordForRecentRecord:fp12 orEmail:fp16;
- addressBookPersonForEmail:fp12;
- existingImageDirectories;
- directoryForImageBySender;
- imageForMailAddress:fp12;
- (void)_addressPhotoLoaded:fp12;
- fileURLForMailAddress:fp12;
- groups;
- (void)_addEmailsFromGroup:fp12 toArray:fp16;
- emailAddressesFromGroup:fp12;
- expandPrivateAliases:fp12;

@end

@interface MimePart:NSObject <NSCopying>
{
    NSString *_type;
    NSString *_subtype;
    NSMutableDictionary *_bodyParameters;
    NSString *_contentTransferEncoding;
    NSMutableDictionary *_otherIvars;
    struct _NSRange _range;
    id _parentOrBody;
    MimePart *_nextPart;
}

+ (void)initialize;
- (void)dealloc;
- init;
- type;
- (void)setType:fp12;
- subtype;
- (void)setSubtype:fp12;
- bodyParameterForKey:fp12;
- (void)setBodyParameter:fp12 forKey:fp16;
- bodyParameterKeys;
- contentTransferEncoding;
- (void)setContentTransferEncoding:fp12;
- disposition;
- (void)setDisposition:fp12;
- dispositionParameterForKey:fp12;
- (void)setDispositionParameter:fp12 forKey:fp16;
- dispositionParameterKeys;
- contentDescription;
- (void)setContentDescription:fp12;
- contentID;
- (void)setContentID:fp12;
- languages;
- (void)setLanguages:fp12;
- parentPart;
- firstChildPart;
- nextSiblingPart;
- subparts;
- subpartAtIndex:(int)fp12;
- (void)setSubparts:fp12;
- (void)addSubpart:fp12;
- (struct _NSRange)range;
- (void)setRange:(struct _NSRange)fp12;
- bodyData;
- mimeBody;
- (void)setMimeBody:fp12;
- description;
- attachmentFilename;
- (char)hasCachedDataInStore;
- (unsigned int)numberOfAttachments;
- (unsigned int)textEncoding;
- (unsigned int)approximateRawSize;
- (char)isAttachment;
- (char)isRich;
- attributedString;
- htmlDocument;
- fileWrapper;
- stringForIndexing;
- startPart;
- (int)numberOfAlternatives;
- alternativeAtIndex:(int)fp12;
- copyWithZone:(struct _NSZone *)fp12;

@end

@interface MimePart(DecodingSupport)
- _fullMimeTypeEvenInsideAppleDouble;
- contentsForTextSystem;
- decodeTextPlain;
- decodeText;
- decodeTextRichtext;
- decodeTextEnriched;
- decodeTextHtml;
- decodeMultipart;
- decodeMultipartAlternative;
- decodeMultipartX_folder;
- decodeMessageDelivery_status;
- decodeMessageRfc822;
- decodeMessagePartial;
- decodeMessageExternal_body;
- decodeApplicationMac_binhex40;
- decodeApplicationApplefile;
- decodeMultipartAppledouble;
@end

@interface MimePart(IMAPSupport)
- (char)parseIMAPPropertyList:fp12;
- partNumber;
@end

@interface MimePart(MessageSupport)
- (char)parseMimeBody;
@end

@interface _OutgoingMessage:Message
{
    _OutgoingMessageBody *messageBody;
}

- (void)dealloc;
- messageStore;
- messageBody;
- messageBodyIfAvailable;
- messageDataIncludingFromSpace:(char)fp12;

@end

@interface _OutgoingMessageBody:MessageBody
{
    NSMutableData *rawData;
}

- (void)dealloc;
- mutableData;
- rawData;

@end

@interface MessageWriter:NSObject
{
    int _createsMimeAlternatives:1;
    int _createsRichText:1;
    int _createsPlainTextOnly:1;
    int _allows8BitMimeParts:1;
    int _allowsBinaryMimeParts:1;
    unsigned int _preferredEncoding;
}

- init;
- createDataForAttributedString:fp12;
- (void)appendDataForMimePart:fp12 toData:fp16 withPartData:fp20;
- createBounceMessageForMessage:fp12;
- createMessageWithAttributedString:fp12 headers:fp16;
- (char)createsMimeAlternatives;
- (void)setCreatesMimeAlternatives:(char)fp12;
- (char)createsPlainTextOnly;
- (void)setCreatesPlainTextOnly:(char)fp12;
- (char)createsRichText;
- (void)setCreatesRichText:(char)fp12;
- (char)allows8BitMimeParts;
- (void)setAllows8BitMimeParts:(char)fp12;
- (char)allowsBinaryMimeParts;
- (void)setAllowsBinaryMimeParts:(char)fp12;
- (unsigned int)preferredEncoding;
- (void)setPreferredEncoding:(unsigned int)fp12;

@end

@interface NSSound(MessageAdditions)
+ (void)_playNextSound;
+ (void)_playSound;
+ (void)sound:fp12 didFinishPlaying:(char)fp16;
+ (void)_setupPlayList;
+ (void)_addSoundOrPathToPlayList:fp12 playImmediately:(char)fp16;
+ (void)addSoundToPlayList:fp12 playImmediately:(char)fp16;
+ (void)addSoundPathToPlayList:fp12 playImmediately:(char)fp16;
+ validPathToSound:fp12;
+ systemLibrarySoundsDirs;
+ librarySoundsDirs;
+ networkLibrarySoundsDirs;
+ tildeLibrarySoundsDirs;
+ appendSoundsToPaths:fp12;
+ soundsAtPaths:fp12;
@end

@interface NSAppleEventDescriptor(MailAdditions)
- (int)sendNoReplyWithMode:(int)fp12 priority:(short)fp16;
- (int)sendNoReply;
@end

@interface MailboxUid:NSObject
{
    id _accountOrPathComponent;
    unsigned int _attributes;
    void *_tree;
}

+ specialMailboxUids;
- (void)_postInvalidNotificationIfNeeded;
- (void)dealloc;
- init;
- initWithAccount:(Account*)account;
- initWithName:(NSString*)name attributes:(unsigned int)atts;
- (NSString*)displayName;
- (NSString*)name;
- (void)setName:(NSString*)name;
- (unsigned int)attributes;
- (void)setAttributes:(unsigned int)fp12;
- (unsigned int)unreadCount;
- (void)setUnreadCount:(unsigned int)fp12;
- (BOOL)hasChildren;
- (unsigned int)numberOfGenericChildren;
- (unsigned int)numberOfChildren;
- childAtIndex:(unsigned int)fp12;
- (unsigned int)indexOfChild:fp12;
- childWithName:fp12;
- mutableCopyOfChildren;
- (char)setChildren:fp12;
- parent;
- (void)setParent:fp12;
- (void)setRepresentedAccount:fp12;
- representedAccount;
- account;
- applescriptAccount;
- (char)isValid;
- (void)invalidate;
- (char)isContainer;
- (char)isStore;
- (char)isSpecialMailboxUid;
- accountRelativePath;
- fullPath;
- tildeAbbreviatedPath;
- pathRelativeToMailbox:fp12;
- (int)compareWithMailboxUid:fp12;
- (int)indexToInsertChildMailboxUid:fp12;
- (char)isDescendantOfMailbox:fp12;
- depthFirstEnumerator;
- description;
- (int)type;
- (void)setType:(int)fp12;
- _loadUserInfo;
- userInfoObjectForKey:fp12;
- (void)setUserInfoObject:fp12 forKey:fp16;
- (char)userInfoBoolForKey:fp12;
- (void)setUserInfoBool:(char)fp12 forKey:fp16;
- (void)saveUserInfo;

@end

@interface SpecialMailboxUid:MailboxUid
{
}

+ appleScriptNameForMailboxType:(int)fp12;
+ specialMailboxWithIdentifier:fp12;
+ specialMailboxUidForMailboxUid:fp12;
+ inboxMailboxUid;
+ sentMessagesMailboxUid;
+ draftsMailboxUid;
+ junkMailboxUid;
+ outboxMailboxUid;
+ trashMailboxUid;
- displayName;
- name;
- account;
- children;
- mutableCopyOfChildren;
- childAtIndex:(unsigned int)fp12;
- (unsigned int)numberOfChildren;
- (unsigned int)numberOfGenericChildren;
- (unsigned int)unreadCount;
- tildeAbbreviatedPath;
- _viewerAttributesKey;
- _loadUserInfo;
- (void)saveUserInfo;

@end


@interface MessageRuleCriterion:NSObject
{
    NSString *_criterionIdentifier;
    NSString *_expression;
    int _qualifier;
    MessageRule *_rule;
}

+ criteriaFromDefaultsArray:fp12;
+ defaultsArrayFromCriteria:fp12;
- initWithCriterion:fp12 expression:fp16;
- (void)setMessageRule:fp12;
- initWithDictionary:fp12;
- (void)dealloc;
- (char)isEqual:fp12;
- description;
- dictionaryRepresentation;
- (int)criterionType;
- (void)setCriterionType:(int)fp12;
- criterionIdentifier;
- (void)setCriterionIdentifier:fp12;
- _qualifierString;
- (int)qualifier;
- (void)setQualifier:(int)fp12;
- expression;
- (void)setExpression:fp12;
- _headersRequiredForEvaluation;
- (void)addHeadersRequiredForRoutingToArray:fp12;
- (char)_evaluateHeaderCriterion:fp12;
- (char)_evaluateBodyCriterion:fp12;
- (char)_evaluateAddressBookCriterion:fp12;
- (char)_doesGroup:fp12 containSender:fp16;
- (char)_evaluateMemberOfGroupCriterion:fp12;
- (char)_evaluateAccountCriterion:fp12;
- (char)_evaluateJunkMailCriterion:fp12;
- (char)doesMessageSatisfyCriterion:fp12;
- (int)messageRuleQualifierForString:fp12;
- stringForMessageRuleQualifier:(int)fp12;
- (int)criterionTypeForString:fp12;
- stringForCriterionType:(int)fp12;
- (char)hasExpression;
- (char)hasQualifier;
- objectSpecifier;

@end

@interface MessageRuleCriterion(ApplescriptRuleCriterion)
- (int)ruleType;
- (void)setRuleType:(int)fp12;
- (int)ruleQualifier;
- (void)setRuleQualifier:(int)fp12;
- ruleExpression;
- (void)setRuleExpression:fp12;
@end

@interface NSImage(ASBetterImageLookup)
+ betterImageNamed:fp12;
+ appIconIncludingUserCustomization;
+ appIconWithUnreadBadge:(int)fp12 baseImageName:fp16;
@end

/*
@interface IMAPOperationCache:NSObject
{
    IMAPAccount *_account;
    NSFileHandle *_handle;
    NSMutableArray *_ops;
    unsigned int _lastUid;
    unsigned int _lastSave;
    unsigned int _lastUidValidity;
}

- initWithIMAPAccount:fp12;
- (void)dealloc;
- account;
- (void)createMailbox:fp12;
- (void)deleteMailbox:fp12;
- (void)setFlags:fp12 andClearFlags:fp16 forMessages:fp20;
- (unsigned int)firstUidForCopyingMessages:fp12 toMailbox:fp16;
- (unsigned int)uidForAppendingMessageData:fp12 withFlags:fp16 andInternalDate:fp20 toMailbox:fp24;
- (void)expungeTemporaryUid:(unsigned int)fp12;
- (void)saveChanges;
- (unsigned int)numberOfPendingChanges;
- dataForTemporaryUid:(unsigned int)fp12;
- (char)hasOperationsForMailbox:fp12;
- (char)connection:fp12 shouldHandleUntaggedResponse:fp16 forCommand:(struct ? *)fp20;
- (void)_performCreateOperation:fp12 withContext:(struct ? *)fp16;
- (void)_performDeleteOperation:fp12 withContext:(struct ? *)fp16;
- (void)_performStoreOperation:fp12 withContext:(struct ? *)fp16;
- (void)_performAppendOperation:fp12 withContext:(struct ? *)fp16;
- (void)_performCopyOperation:fp12 withContext:(struct ? *)fp16;
- (void)performDeferredOperationsWithConnection:fp12;
- deferredOperations;

@end
*/

/*
@interface IMAPOfflineCopyOnStupidServerOperation:IMAPOperation
{
    struct __CFArray *messageIds;
    struct __CFArray *internalDates;
}

- (void)serializeIntoData:fp12;
- (unsigned char)_magic;
- (void)_deserializeOpSpecificValuesFromData:fp12 cursor:(unsigned int *)fp16;
- (void)dealloc;
- (char)getMessageId:(id *)fp12 andInternalDate:(id *)fp16 forDestinationUid:(unsigned int)fp20;
- (void)setMessageId:fp12 andInternalDate:fp16 forMessageWithSourceUid:(unsigned int)fp20;
- (void)expungeTemporaryUid:(unsigned int)fp12;
- (unsigned int)approximateSize;

@end
*/

/*
@interface IMAPOperation:NSObject
{
    int _type:8;
    int _temporaryUids:1;
    NSString *_mailboxName;
    union ? _opSpecific;
}

+ deserializeFromData:fp12 cursor:(unsigned int *)fp16;
- (unsigned char)_magic;
- (void)_deserializeOpSpecificValuesFromData:fp12 cursor:(unsigned int *)fp16;
- (void)serializeIntoData:fp12;
- initWithMailboxToCreate:fp12;
- initWithMailboxToDelete:fp12;
- initWithFlagsToSet:fp12 flagsToClear:fp16 forUids:fp20 inMailbox:fp24;
- initWithUidsToCopy:fp12 fromMailbox:fp16 toMailbox:fp20 firstNewUid:(unsigned int)fp24;
- initWithAppendedUid:(unsigned int)fp12 approximateSize:(unsigned int)fp16 flags:fp20 internalDate:fp24 mailbox:fp28;
- (void)dealloc;
- (char)isSourceOfTemporaryUid:(unsigned int)fp12;
- (char)actsOnTemporaryUid:(unsigned int)fp12;
- (void)expungeTemporaryUid:(unsigned int)fp12;
- (unsigned int)firstTemporaryUid;
- (unsigned int)lastTemporaryUid;
- (int)operationType;
- mailboxName;
- (unsigned int)approximateSize;
- (char)usesRealUids;
- (void)setUsesRealUids:(char)fp12;
- flagsToSet;
- flagsToClear;
- uids;
- flags;
- internalDate;
- (unsigned int)uid;
- sourceUids;
- destinationUids;
- destinationMailbox;
- (unsigned int)sourceUidForTemporaryUid:(unsigned int)fp12;
- (char)getMessageId:(id *)fp12 andInternalDate:(id *)fp16 forDestinationUid:(unsigned int)fp20;
- (void)setMessageId:fp12 andInternalDate:fp16 forMessageWithSourceUid:(unsigned int)fp20;
- description;

@end
*/

/*
@interface ASExtendedOutlineView:NSOutlineView
{
    struct ? _extendedOutlineViewFlags;
}

- (void)setDelegate:fp12;
- (char)drawsColumnSeparators;
- (void)setDrawsColumnSeparators:(char)fp12;
- (void)_drawColumnSeparatorsInRect:(struct _NSRect)fp12;
- (char)_wantsLiveResizeToUseCachedImage;
- (void)drawRect:(struct _NSRect)fp12;
- (char)shouldCollapseAutoExpandedItemsForDeposited:(char)fp12;
- (int)rowForItemEqualTo:fp12;
- findItemEqualTo:fp12;
- (char)redisplayItemEqualTo:fp12;
- (char)reloadItemEqualTo:fp12 reloadChildren:(char)fp16;
- (char)expandItemEqualTo:fp12 expandChildren:(char)fp16;
- (char)collapseItemEqualTo:fp12 collapseChildren:(char)fp16;
- getPersistentExpandedItemsAsArray;
- (void)setPersistentExpandedItemsFromArray:fp12;
- (void)setShouldHideDisclosureTriangles:(char)fp12;
- (char)_shouldHideDisclosureTriangle;
- (struct _NSRect)frameOfCellAtColumn:(int)fp16 row:(int)fp20;
- (char)needsPanelToBecomeKey;
- (float)heightOfRow:(int)fp12;
- (int)rowAtPoint:(struct _NSPoint)fp12;
- (float)_verticalOriginForRow:(int)fp12;
- (struct _NSRect)rectOfRow:(int)fp16;
- (struct _NSRect)_frameOfOutlineCellAtRow:(int)fp16;
- (char)shouldUseSecondaryHighlightColor;
- _highlightColorForCell:fp12;

@end
*/

/*
@interface ASExtendedTableView:NSTableView
{
    struct ? _extendedTableViewFlags;
}

- (char)_wantsLiveResizeToUseCachedImage;
- (void)keyDown:fp12;
- (char)needsPanelToBecomeKey;
- (void)setDelegate:fp12;
- (int)firstmostSelectedRow;
- (int)lastmostSelectedRow;
- (void)stopObservingViewBoundsChange:fp12;
- (void)startObservingViewBoundsChange:fp12;
- (void)viewWillMoveToSuperview:fp12;
- (void)superviewChanged:fp12;
- (char)becomeFirstResponder;
- (char)resignFirstResponder;
- (void)setPersistentTableColumnsFromArray:fp12;
- getPersistentTableColumnsAsArray;
- (void)setTableColumn:fp12 toVisible:(char)fp16 atPosition:(int)fp20;
- (void)moveColumn:(int)fp12 toColumn:(int)fp16;
- (void)setAlwaysKeepColumnsSizedToFitAvailableSpace:(char)fp12;
- (char)alwaysKeepColumnsSizedToFitAvailableSpace;
- (float)totalWidthOfAllColumns;
- (void)betterSizeToFit;
- (void)sizeToFit;
- (void)_sizeToFitIfNecessary;
- dragImageForRows:fp12 event:fp16 dragImageOffset:(struct _NSPoint *)fp20;
- (void)draggedImage:fp12 endedAt:(struct _NSPoint)fp16 operation:(unsigned int)fp24;
- (char)shouldUseSecondaryHighlightColor;
- _highlightColorForCell:fp12;
- (void)_highlightRect:(struct _NSRect)fp12 withColor:fp28 usingStyle:(int)fp32;
- (void)_colorizeRow:(int)fp12 inRect:(struct _NSRect)fp16 clipRect:(struct _NSRect)fp28;
- (void)drawRow:(int)fp12 clipRect:(struct _NSRect)fp16;
- (struct _NSRect)cellFrameForPaddedRect:(struct _NSRect)fp16;
- (struct _NSRect)paddedRectForCellFrame:(struct _NSRect)fp16;
- (struct _NSRect)frameOfCellAtColumn:(int)fp16 row:(int)fp20;
- (int)_distanceInDragDirectionBeforeDragAttempt;
- (int)_distanceInNonDragDirectionBeforeAbortingDragAttempt;

@end
*/

@interface NSTableView(WhyIsntTheKitDoingThisForUs)
- menuForEvent:fp12;
@end

@interface AuthScheme:NSObject
{
}

+ (void)initialize;
+ knownSchemes;
+ (void)registerSchemeClass:(Class)fp12;
+ schemeWithName:fp12;
- retain;
- (unsigned int)retainCount;
- (void)release;
- (Class)connectionClassForAccount:fp12;
- (Class)authenticatorClassForAccount:fp12;
- (unsigned int)defaultPortForAccount:fp12;
- authenticatorForAccount:fp12 connection:fp16;
- (char)requiresPassword;
- name;
- humanReadableName;

@end

@interface GSSAPIAuthenticator:SASLAuthenticator <SASLSecurityLayer>
{
    int _maxBufferSize:16;
    int _substate:2;
    int _securityLevel:4;
    void *_gssContext;
    void *_targetName;
    unsigned int _qopState;
}

+ allocWithZone:(struct _NSZone *)fp12;
- (void)setAuthenticationState:(int)fp12;
- responseForServerData:fp12;
- securityLayer;
- (unsigned int)encryptionBufferSize;
- createDecryptedDataForBytes:(const STR)fp12 length:(unsigned int)fp16 errorMessage:(id *)fp20;
- createEncryptedDataForBytes:(const STR)fp12 length:(unsigned int)fp16 errorMessage:(id *)fp20;

@end

@interface GSSAPIAuthScheme:AuthScheme
{
}

- (Class)authenticatorClassForAccount:fp12;
- name;
- humanReadableName;
- (char)requiresPassword;

@end

@interface KerberosV4Authenticator:SASLAuthenticator <SASLSecurityLayer>
{
    struct KClientSessionOpaque *_session;
    struct KClientPrincipalOpaque *_serverPrincipal;
    unsigned int _checksum;
    int _securityLevel:4;
    int _maxCipherBufferSize:24;
}

+ allocWithZone:(struct _NSZone *)fp12;
- (void)dealloc;
- (void)setAuthenticationState:(int)fp12;
- responseForServerData:fp12;
- securityLayer;
- (unsigned int)encryptionBufferSize;
- createDecryptedDataForBytes:(const STR)fp12 length:(unsigned int)fp16 errorMessage:(id *)fp20;
- createEncryptedDataForBytes:(const STR)fp12 length:(unsigned int)fp16 errorMessage:(id *)fp20;

@end

@interface KerberosV4AuthScheme:AuthScheme
{
}

- (Class)authenticatorClassForAccount:fp12;
- name;
- humanReadableName;
- (char)requiresPassword;

@end

@interface Account(TempHack)
- kerberosServerPrincipal;
@end

@interface KPOPConnection:POP3Connection
{
}

+ allocWithZone:(struct _NSZone *)fp12;
- (char)connectUsingAccount:fp12 errorMessage:(id *)fp16;
- (char)authenticateUsingAccount:fp12 errorMessage:(id *)fp16;

@end

@interface KPOPAuthScheme:AuthScheme
{
}

- (char)supportsAccountType:fp12;
- (Class)connectionClassForAccount:fp12;
- (unsigned int)defaultPortForAccount:fp12;
- (Class)authenticatorClassForAccount:fp12;
- (char)requiresPassword;
- name;
- humanReadableName;

@end

@interface ExpandingSplitView:NSSplitView
{
    float _oldSplitPosition;
}

- (void)mouseDown:fp12;
- (float)getSplitPercentage;
- (char)isSecondViewVisible;
- (void)resizeSubviewsToPercentage:(float)fp40;

@end

@interface SoundPopUpButton:NSPopUpButton
{
    NSButton *addSoundButton;
    NSButton *removeSoundButton;
    NSButton *doneButton;
    NSTableView *soundTableView;
    NSMutableArray *userSounds;
    NSPanel *soundPanel;
    id delegate;
    NSMenu *soundMenu;
    NSString *_selectedItem;
    NSMenuItem *_otherItem;
    char _amIAwake;
    char _showSoundsFromBundle;
    char _showSoundsFromDelegate;
    char _showSoundsFromSystemLibrary;
    char _showSoundsFromLibrary;
    char _showSoundsFromNetworkLibrary;
    char _showSoundsFromTildeLibrary;
    char _showNone;
    char _showAddRemove;
}

- _addItemWithTitle:fp12;
- (void)_appendSoundsFromDirectories:fp12;
- (void)_popupMenuChanged:fp12;
- (void)_configureSoundMenu;
- (void)_playSound;
- (void)_playSoundForItemAtIndex:(int)fp12;
- (void)_invalidateSoundMenu;
- otherMenuItem;
- (void)_commonInit;
- initWithFrame:(struct _NSRect)fp12;
- initWithCoder:fp12;
- (void)awakeFromNib;
- menu;
- soundPath;
- (int)selectSoundPath:fp12;
- (void)openPanelDidEnd:fp12 returnCode:(int)fp16 contextInfo:(void *)fp20;
- (void)addRemoveMailSound:fp12;
- (void)soundSheetDidEnd:fp12 returnCode:(int)fp16 contextInfo:(void *)fp20;
- (void)newSoundClicked:fp12;
- (void)removeSoundClicked:fp12;
- (void)doneClicked:fp12;
- (int)numberOfRowsInTableView:fp12;
- tableView:fp12 objectValueForTableColumn:fp16 row:(int)fp20;
- (void)tableViewSelectionDidChange:fp12;
- (char)showSoundsFromBundle;
- (void)setShowSoundsFromBundle:(char)fp12;
- (char)showSoundsFromDelegate;
- (void)setShowSoundsFromDelegate:(char)fp12;
- (char)showSoundsFromSystemLibrary;
- (void)setShowSoundsFromSystemLibrary:(char)fp12;
- (char)showSoundsFromLibrary;
- (void)setShowSoundsFromLibrary:(char)fp12;
- (char)showSoundsFromNetworkLibrary;
- (void)setShowSoundsFromNetworkLibrary:(char)fp12;
- (char)showSoundsFromTildeLibrary;
- (void)setShowSoundsFromTildeLibrary:(char)fp12;
- (char)showNone;
- (void)setShowNone:(char)fp12;
- (char)showAddRemove;
- (void)setShowAddRemove:(char)fp12;
- (void)dealloc;

@end

@interface NSBundle(MessageFrameworkAdditions)
- (char)loadNibNamed:fp12 owner:fp16;
- allLocalizedStringsForKey:fp12 inTable:fp16;
@end

@interface CompletionPoofAnimator:NSObject
{
    NSWindow *_poofWindow;
    NSImageView *_poofWindowImageView;
    NSImage *_poofAnimFrames[5];
    double _nextPoofTime;
    int _nextPoofFrame;
    char _releasesAfterPoofing;
}

+ (void)runPoofAtPoint:(struct _NSPoint)fp12;
- init;
- (void)dealloc;
- (void)setReleasesAfterPoofing:(char)fp12;
- (void)setDragWindowFrame:(struct _NSRect)fp12;
- (void)setDragWindowOrigin:(struct _NSPoint)fp12;
- (void)setDragWindowImage:fp12;
- (void)startPoofing:(struct _NSSize)fp12 where:(struct _NSPoint)fp20;
- (void)_donePoofing;
- (void)updatePoofAnimation;

@end

@interface UsageCounter:NSObject
{
    NSString *_name;
    NSMutableDictionary *_counts;
    char _isDirty;
}

+ sharedInstance;
+ (char)gatherJunkMailUsageCounts;
+ (void)setGatherJunkMailUsageCounts:(char)fp12;
- initWithName:fp12;
- (void)dealloc;
- _dictionaryForKey:fp12 createIfNeeded:(char)fp16;
- (void)saveDefaults;
- (unsigned int)numberOfDaysAvailableForKey:fp12;
- (unsigned int)countForKey:fp12;
- (unsigned int)countForKey:fp12 includeToday:(char)fp16;
- (void)removeCountForKey:fp12;
- (void)incrementCountForKey:fp12;
- (void)incrementCountForKey:fp12 byCount:(int)fp16;

@end

@interface _MailboxUidEnumerator:NSEnumerator
{
    struct __CFTree *_startTree;
    struct __CFTree *_lastTree;
}

- (void)dealloc;
- initWithTree:(struct __CFTree *)fp12;
- nextObject;

@end

@interface NSObject(MailAdditions)
- formattedAddressWithName:fp12 email:fp16;
@end

@interface ABAddressBook(MailAdditions)
- recordsCompletingFirstName:fp12 lastName:fp16 email:fp20 withOperator:(int)fp24;
- recordWithEmailAddress:fp12;
@end

/*
@interface ABLDAP_ResultElement(MailAdditions)
- (char)isGroup;
- (int)recordType;
- compoundName;
- _fullName;
- compoundNameAndEmail;
- (char)exactlyMatchesString:fp12;
@end
*/

/*
@interface ABMailRecent(MailAdditions)
- mostRecentDate;
- (char)hasRelatedAddressBookRecord;
- (char)isGroup;
- _fullName;
@end
*/

@interface ABGroup(MailAdditions)
- (char)isGroup;
- _fullName;
@end

@interface ABPerson(MailAdditions)
- (char)hasEmailAddress:fp12;
- (char)isMe;
- compoundNameAndEmailForGroupMembership:fp12;
- (char)isGroup;
@end

@interface ABRecord(MailAdditions)
- firstName;
- lastName;
- _fullName;
- email;
- compoundName;
- compoundNameAndEmail;
- (char)isGroup;
@end

@interface NSABVCardPhotoLoader:NSObject <NSURLHandleClient>
{
    ABRecord *_card;
    NSString *_email;
    NSURLHandle *_urlHandle;
}

- initForCard:fp12 email:fp16 urlPath:fp20;
- (void)dealloc;
- (int)_checkError;
- loadSynchronously;
- (void)loadAsynchronously;
- (void)URLHandleResourceDidBeginLoading:fp12;
- (void)URLHandle:fp12 resourceDataDidBecomeAvailable:fp16;
- (void)_finishWithNotificationNamed:fp12;
- (void)URLHandleResourceDidFinishLoading:fp12;
- (void)URLHandleResourceDidCancelLoading:fp12;
- (void)URLHandle:fp12 resourceDidFailLoadingWithReason:fp16;

@end

@interface ABRecord(Photo)
+ (void)prunePhotoCache;
+ _downloadPhotoForIToolsAccount:fp12 forCard:fp16 async:(char)fp20;
+ _photoForEmailAddress:fp12 forCard:fp16 checkLibrary:(char)fp20 async:(char)fp24;
+ photoForEmailAddress:fp12 checkLibrary:(char)fp16 async:(char)fp20;
+ photoURLForEmailAddress:fp12 checkLibrary:(char)fp16;
+ (char)setPhotoData:fp12 forEmailAddress:fp16;
- photo_async:(char)fp12;
- photo;
@end

@interface SoundMenu:NSMenu
{
    int _insertionIndex;
    NSMenuItem *_otherItem;
}

- _addItemWithTitle:fp12;
- init;
- initAndLoadSounds;
- (void)playSoundForItemAtIndex:(int)fp12;
- (int)addSoundPath:fp12;
- (void)performActionForItemAtIndex:(int)fp12;
- otherMenuItem;
- (void)_soundMenuDidAddItem:fp12;

@end

@interface HelpButton:NSButton
{
    NSString *_helpBook;
    NSString *_helpAnchor;
    NSString *_helpQuery;
}

+ (void)_registerHelpContent;
+ (char)openHelpBook:fp12 helpAnchor:fp16;
+ (char)openHelpBook:fp12 helpQuery:fp16;
- (void)dealloc;
- (void)awakeFromNib;
- (void)setHelpBook:fp12;
- (void)setHelpBook:fp12 helpAnchor:fp16;
- (void)setHelpBook:fp12 helpQuery:fp16;
- (char)sendAction:(SEL)fp12 to:fp16;

@end

@interface NSAppleScript(MessageRuleAdditions)
- executeHandlerWithName:fp12 andArguments:fp16 error:(id *)fp20;
- (char)compileAndReturnError:(id *)fp12;
@end

@interface CachingABRecord:NSObject
{
    ABRecord *record;
    NSMutableDictionary *propertyValues;
    NSMutableArray *matchingEmails;
}

- initWithABRecord:fp12;
- (void)dealloc;
- valueForProperty:fp12;
- (char)setValue:fp12 forProperty:fp16;
- firstName;
- lastName;
- _fullName;
- email;
- (char)isGroup;
- compoundName;
- compoundNameAndEmail;
- (int)recordType;
- (char)exactlyMatchesString:fp12;
- (char)isRecentRecord;
- record;
- matchingEmails;
- (void)addMatchingEmail:fp12;
- methodSignatureForSelector:(SEL)fp12;
- (void)forwardInvocation:fp12;

@end

/*
@interface MimeHTMLDocument:HTMLDocument
{
    MimeBody *_mimeBody;
    MimePart *_documentPart;
    NSMutableDictionary *_handlesByContentId;
}

- (void)dealloc;
- (void)setDocumentPart:fp12;
- documentPart;
- urlForProposedLink:fp12 relativeToURL:fp16 withTarget:fp20 resolveNow:(char)fp24;
- handleForURL:fp12 useCache:(char)fp16;

@end
*/

@interface NSURL(MimeHTMLDocumentAdditions)
- mimeHtmlDocument;
- (void)setMimeHtmlDocument:fp12;
@end

