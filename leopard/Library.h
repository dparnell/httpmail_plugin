/*
 *     Generated by class-dump 3.1.
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2005 by Steve Nygard.
 */

@interface Library : NSObject
{
    int _status;
}

+ (id)sharedInstance;
+ (void)_commitMessages;
+ (void)commitMessage:(id)fp8 immediately:(BOOL)fp12;
+ (void)flagsChangedForMessages:(id)fp8 flags:(id)fp12 oldFlagsByMessage:(id)fp16;
+ (void)flagsChangedForMessages:(id)fp8 flags:(id)fp12 oldFlagsByMessage:(id)fp16 updateUnreadCount:(BOOL)fp20;
+ (id)commitTimer;
+ (void)setCommitTimer:(id)fp8;
+ (id)updateEmlxTimer;
+ (void)setUpdateEmlxTimer:(id)fp8;
+ (void)scheduleCommit;
+ (void)unScheduleCommit;
+ (void)scheduleMessageFileUpdate;
+ (void)unScheduleMessageFileUpdate;
+ (void)synchronouslyCommitTransaction;
+ (void)synchronouslyUpdateMessageFiles;
+ (void)commit;
+ (void)commitInBackground;
+ (void)updateMessageFilesInBackground;
+ (void)setFlags:(unsigned long)fp8 forMessage:(id)fp12;
+ (void)_setFlags:(id)fp8 forMessage:(id)fp12;
+ (void)_flushChangedFlags;
+ (void)setFlagsForMessages:(id)fp8 mask:(unsigned long)fp12;
+ (void)setFlagsForMessages:(id)fp8;
+ (void)setBackgroundColorForMessages:(id)fp8 textColorForMessages:(id)fp12;
+ (void)setFlagsAndColorForMessages:(id)fp8;
+ (void)updateEncodingForMessage:(id)fp8;
+ (BOOL)initializeDatabase:(struct sqlite3 *)fp8;
+ (void)initialize;
+ (BOOL)setupLibrary;
+ (void)_mailboxWillBeInvalidated:(id)fp8;
+ (void)_mailboxWasRenamed:(id)fp8;
+ (id)plistDataForMessage:(id)fp8 subject:(id)fp12 sender:(id)fp16 to:(id)fp20 dateSent:(id)fp24 remoteID:(id)fp28 originalMailbox:(id)fp32 flags:(unsigned long long)fp36 mergeWithDictionary:(id)fp44;
+ (BOOL)_writeEmlxFile:(id)fp8 forMessage:(id)fp12 withEmlxData:(id)fp16;
+ (BOOL)_writeEmlxFile:(id)fp8 forMessage:(id)fp12 withBodyData:(id)fp16 plistData:(id)fp20;
+ (void)touchDirectoryForMailbox:(id)fp8;
+ (BOOL)isIMAPAccount:(id)fp8;
+ (BOOL)isLocalAccount:(id)fp8;
+ (BOOL)isLibraryMessage:(id)fp8;
+ (BOOL)canUseEmlxFileWhenCopyingMessage:(id)fp8 fromAccount:(id)fp12 toAccount:(id)fp16;
+ (void)cleanupTablesReferencingMessageID:(unsigned int)fp8 inDatabase:(struct sqlite3 *)fp12;
+ (id)insertOrUpdateMessages:(id)fp8 withMailbox:(id)fp12 fetchBodies:(BOOL)fp16 isInitialImport:(BOOL)fp20 oldMessagesByNewMessage:(id)fp24 remoteIDs:(id)fp28 newDocumentIDs:(id)fp32 setFlags:(unsigned long long)fp36 clearFlags:(unsigned long long)fp44 messageFlagsForMessages:(id)fp52 copyFiles:(BOOL)fp56 progressDelegate:(id)fp60 updateRowIDs:(id)fp64;
+ (id)addMessages:(id)fp8 withMailbox:(id)fp12 fetchBodies:(BOOL)fp16 isInitialImport:(BOOL)fp20 oldMessagesByNewMessage:(id)fp24 remoteIDs:(id)fp28 setFlags:(unsigned long long)fp32 clearFlags:(unsigned long long)fp40 messageFlagsForMessages:(id)fp48 copyFiles:(BOOL)fp52;
+ (id)addMessages:(id)fp8 withMailbox:(id)fp12 fetchBodies:(BOOL)fp16 isInitialImport:(BOOL)fp20 oldMessagesByNewMessage:(id)fp24;
+ (id)addMessages:(id)fp8 withMailbox:(id)fp12 fetchBodies:(BOOL)fp16 oldMessagesByNewMessage:(id)fp20;
+ (id)addMessages:(id)fp8 withMailbox:(id)fp12 progressDelegate:(id)fp16;
+ (id)addMessages:(id)fp8 withMailbox:(id)fp12;
+ (id)duplicateMessages:(id)fp8 newRemoteIDs:(id)fp12 newDocumentIDs:(id)fp16 forMailbox:(id)fp20 setFlags:(unsigned long long)fp24 clearFlags:(unsigned long long)fp32 messageFlagsForMessages:(id)fp40 createNewCacheFiles:(BOOL)fp44;
+ (id)duplicateMessages:(id)fp8 newRemoteIDs:(id)fp12 newDocumentIDs:(id)fp16 forMailbox:(id)fp20 setFlags:(unsigned long long)fp24 clearFlags:(unsigned long long)fp32 createNewCacheFiles:(BOOL)fp40;
+ (void)setAttachmentNames:(id)fp8 forMessage:(id)fp12;
+ (void)setThreadPriority:(int)fp8;
+ (int)threadPriority;
+ (unsigned int)updateSequenceNumber;
+ (unsigned int)accessSequenceNumber;
+ (void)_rebuildActiveAccountsClause;
+ (void)_rebuildActiveNoteMailboxesClause;
+ (void)_rebuildAccountClauses;
+ (id)activeNoteMailboxesClause;
+ (void)setActiveNoteMailboxesClause:(id)fp8;
+ (void)sendMessagesMatchingQuery:(const char *)fp8 to:(id)fp12 options:(unsigned int)fp16;
+ (id)messagesMatchingQuery:(const char *)fp8 options:(unsigned int)fp12;
+ (id)messagesWhere:(id)fp8 sortedBy:(id)fp12 options:(unsigned int)fp16;
+ (void)sendMessagesForMailbox:(id)fp8 where:(id)fp12 sortedBy:(id)fp16 ascending:(BOOL)fp20 to:(id)fp24 options:(unsigned int)fp28;
+ (id)messagesForMailbox:(id)fp8 where:(id)fp12 sortedBy:(id)fp16 ascending:(BOOL)fp20 options:(unsigned int)fp24;
+ (id)messagesForMailbox:(id)fp8 olderThanNumberOfDays:(int)fp12;
+ (id)unreadMessagesForMailbox:(id)fp8;
+ (void)gatherCountsForMailbox:(id)fp8 totalCount:(unsigned long *)fp12 unreadCount:(unsigned long *)fp16 deletedCount:(unsigned long *)fp20 totalSize:(unsigned long long *)fp24;
+ (unsigned int)unreadCountForMessageType:(int)fp8;
+ (unsigned int)unreadCountForMailbox:(id)fp8;
+ (unsigned int)deletedCountForMailbox:(id)fp8;
+ (id)messageWithRemoteID:(id)fp8 inRemoteMailbox:(id)fp12;
+ (unsigned int)maximumRemoteIDForMailbox:(id)fp8;
+ (id)getDetailsForMessagesWithRemoteIDs:(id)fp8 fromMailbox:(id)fp12;
+ (void)setStoresForMessages:(id)fp8;
+ (void)setStoreForMessage:(id)fp8 knownStores:(id)fp12;
+ (id)messageWithMessageID:(id)fp8;
+ (id)messagesWithMessageIDHeader:(id)fp8;
+ (id)messageWithLibraryID:(unsigned int)fp8 options:(unsigned int)fp12;
+ (id)messageWithLibraryID:(unsigned int)fp8;
+ (id)residentMessages;
+ (void)_addMessageToResidentMessages:(id)fp8;
+ (void)removeMessageFromResidentMessagesWithLibraryID:(unsigned int)fp8;
+ (id)_residentMessageForLibraryID:(unsigned int)fp8;
+ (id)messagesInSameThreadAsMessages:(id)fp8 seenMessageIDs:(id)fp12 options:(unsigned int)fp16 db:(struct sqlite3 *)fp20;
+ (id)messagesInSameThreadAsMessages:(id)fp8 options:(unsigned int)fp12;
+ (id)firstReplyToMessage:(id)fp8;
+ (BOOL)messageHasRelatedNonJunkMessages:(id)fp8;
+ (BOOL)_createTable:(char ***)fp8 fromQuery:(id)fp12 monitor:(id)fp16;
+ (id)stringForQuery:(id)fp8 monitor:(id)fp12;
+ (id)stringForQuery:(id)fp8;
+ (unsigned int)unsignedForQuery:(id)fp8 monitor:(id)fp12;
+ (char *)bytesForQuery:(id)fp8;
+ (void)performQuery:(id)fp8;
+ (id)referencesForLibraryID:(unsigned int)fp8;
+ (id)urlForMailboxID:(unsigned int)fp8;
+ (id)mailboxUidForMessage:(id)fp8 lock:(BOOL)fp12;
+ (id)mailboxUidForMessage:(id)fp8;
+ (id)remoteStoreForMessage:(id)fp8;
+ (id)accountForMessage:(id)fp8;
+ (id)mailboxNameForMessage:(id)fp8;
+ (BOOL)_loadSecondaryMetadataForMessage:(id)fp8 fromDB:(struct sqlite3 *)fp12;
+ (BOOL)loadSecondaryMetadataForMessage:(id)fp8;
+ (void)reloadMessage:(id)fp8;
+ (void)updateFileForMessage:(id)fp8;
+ (BOOL)shouldCancel;
+ (void)messagesWereCompacted:(id)fp8 mailboxes:(id)fp12;
+ (void)compactMessages:(id)fp8;
+ (void)cleanupToDosTables;
+ (void)compactMailbox:(id)fp8;
+ (id)mailboxUidForURL:(id)fp8;
+ (BOOL)renameMailboxes:(id)fp8 to:(id)fp12;
+ (void)deleteMailboxes:(id)fp8;
+ (id)messagesWithMessageID:(id)fp8 inMailbox:(id)fp12;
+ (id)lastMessageWithMessageID:(id)fp8 inMailbox:(id)fp12;
+ (void)addFeed:(id)fp8 forMailbox:(id)fp12;
+ (void)deleteFeedForMailbox:(id)fp8;
+ (BOOL)containsFeedWithURLString:(id)fp8;
+ (id)feedURLStringForMailbox:(id)fp8;
+ (id)mailboxURLStringForFeed:(id)fp8;
+ (id)unflaggedArticlesCreatedBeforeDate:(id)fp8;
+ (id)articlesByRemoteIDForRemoteIDs:(id)fp8;
+ (id)noteWithDocumentID:(id)fp8;
+ (void)setLastReceivedArticlesDate:(id)fp8;
+ (id)lastReceivedArticlesDate;
+ (void)removeRemoteIDsFromRSSArticlesInMessages:(id)fp8;
+ (id)dataPathForMessage:(id)fp8 type:(int)fp12;
+ (id)dataPathForMessage:(id)fp8;
+ (id)attachmentsDirectoryForLibraryID:(unsigned int)fp8 mailboxID:(unsigned int)fp12;
+ (id)realDataPathForMessage:(id)fp8;
+ (id)messageWithDataPath:(id)fp8;
+ (id)dataConsumerForMessage:(id)fp8 part:(id)fp12;
+ (id)dataConsumerForMessage:(id)fp8 isPartial:(BOOL)fp12;
+ (id)dataConsumerForMessage:(id)fp8;
+ (void)setData:(id)fp8 forMessage:(id)fp12 isPartial:(BOOL)fp16;
+ (id)bodyDataAtPath:(id)fp8 headerData:(id *)fp12;
+ (id)headerDataForMessage:(id)fp8;
+ (id)bodyDataForMessage:(id)fp8 andHeaderDataIfReadilyAvailable:(id *)fp12;
+ (id)bodyDataForMessage:(id)fp8;
+ (id)fullBodyDataForMessage:(id)fp8 andHeaderDataIfReadilyAvailable:(id *)fp12;
+ (id)fullBodyDataForMessage:(id)fp8;
+ (id)dataForMimePart:(id)fp8;
+ (BOOL)isMessageContentsLocallyAvailable:(id)fp8;
+ (id)_messageDataAtPath:(id)fp8;
+ (id)fullMessageDataForMessage:(id)fp8;
+ (BOOL)hasCacheFileForMessage:(id)fp8 directoryContents:(id)fp12;
+ (BOOL)hasCacheFileForMessage:(id)fp8 part:(id)fp12 directoryContents:(id)fp16;
+ (void)_markMessageAsViewed:(id)fp8 viewedDate:(id)fp12;
+ (void)markMessageAsViewed:(id)fp8;
+ (id)queryForCriterion:(id)fp8 options:(unsigned int)fp12 baseTable:(unsigned int)fp16 isSubquery:(BOOL)fp20;
+ (id)queryForCriterion:(id)fp8 options:(unsigned int)fp12 baseTable:(unsigned int)fp16;
+ (id)queryForCriterion:(id)fp8 options:(unsigned int)fp12;
+ (void)shouldCancelMDQuery:(struct __MDQuery *)fp8;
+ (void)sendMessagesMatchingCriterion:(id)fp8 to:(id)fp12 options:(unsigned int)fp16;
+ (id)messagesMatchingCriterion:(id)fp8 options:(unsigned int)fp12;
+ (unsigned int)countForCriterion:(id)fp8 monitor:(id)fp12;
+ (unsigned int)countForCriterion:(id)fp8;
+ (id)filterContiguousMessages:(id)fp8 forCriterion:(id)fp12 options:(unsigned int)fp16;
+ (BOOL)rebuildMailbox:(id)fp8;
+ (BOOL)importMailbox:(id)fp8;
+ (BOOL)importing;
+ (BOOL)importEverythingIncludingDisabledAccounts:(BOOL)fp8;
+ (void)_upgradeMessageDirectoriesSynchronously;
+ (void)upgradeMessageDirectoriesIfNeeded;
+ (void)takeAccountsOnlineAllAccounts:(BOOL)fp8;
+ (BOOL)libraryExists;
+ (BOOL)fileExists;
+ (void)dispose;
+ (int)libraryStatus;
+ (BOOL)importableDataExists;
+ (id)currentMailbox;
+ (unsigned int)indexOfCurrentMailbox;
+ (unsigned int)totalNumberOfMailboxes;
+ (unsigned int)indexOfCurrentMessage;
+ (unsigned int)runningIndexOfCurrentMessage;
+ (unsigned int)messagesInMailbox;
+ (unsigned int)totalNumberOfMessages;
+ (void)cleanOldDatabases;
+ (id)storeForMailboxID:(unsigned int)fp8;
+ (void)prepareToReImportMessages;
+ (id)todosForMessage:(id)fp8;
+ (id)messageForToDo:(id)fp8;
+ (int)rowIdSequenceNumberForMessage:(id)fp8;
+ (void)todosDidChangeForMessages:(id)fp8 oldToDosByMessage:(id)fp12 newToDosByMessage:(id)fp16;
+ (BOOL)addToDo:(id)fp8;
+ (int)insertToDoAlarms:(id)fp8 withToDoID:(unsigned int)fp12 usingDB:(struct sqlite3 *)fp16;
+ (int)insertNotesInToDo:(id)fp8 usingDB:(struct sqlite3 *)fp12;
+ (id)todoWithLibraryID:(unsigned int)fp8;
+ (id)todoWithLibraryID:(unsigned int)fp8 options:(unsigned int)fp12;
+ (id)todoWithID:(id)fp8;
+ (id)todoWithID:(id)fp8 remoteID:(id)fp12;
+ (id)todoWithID:(id)fp8 remoteID:(id)fp12 mailboxID:(unsigned int)fp16;
+ (id)libraryToDoWithRemoteID:(id)fp8 inMailbox:(unsigned int)fp12;
+ (id)lastToDoWithID:(id)fp8 inMailbox:(id)fp12;
+ (id)alarmsForToDo:(id)fp8 usingDB:(struct sqlite3 *)fp12;
+ (BOOL)updateToDo:(id)fp8;
+ (int)setAlarmsForToDo:(id)fp8 usingDB:(struct sqlite3 *)fp12;
+ (int)updateNotesInToDo:(id)fp8 usingDB:(struct sqlite3 *)fp12;
+ (BOOL)deleteToDo:(id)fp8;
+ (int)deleteNotesInToDo:(id)fp8 usingDB:(struct sqlite3 *)fp12;
+ (int)addToDoToDeletedLog:(id)fp8 usingDB:(struct sqlite3 *)fp12;
+ (int)removeToDoFromDeletedLog:(id)fp8 usingDB:(struct sqlite3 *)fp12;
+ (BOOL)addToDos:(id)fp8;
+ (BOOL)deleteToDos:(id)fp8;
+ (BOOL)updateToDos:(id)fp8;
+ (id)allToDos;
+ (id)allToDosInMailboxes:(id)fp8;
+ (id)todoIDsMatchingCriterion:(id)fp8;
+ (id)todosForSearchDataArray:(id)fp8;
+ (unsigned int)countToDosMatchingCriterion:(id)fp8;
+ (id)findToDoIDForAlarmID:(id)fp8;
+ (id)listOfToDoIDsInCalendarWithID:(id)fp8;
+ (id)allToDosForMailboxID:(unsigned int)fp8;
+ (id)allToDosForDocumentID:(id)fp8;
+ (BOOL)updateToDo:(id)fp8 toRemoteID:(id)fp12;
+ (id)searchDataForAllToDosInMailboxID:(unsigned int)fp8;
+ (unsigned int)mailboxIDForMailboxUid:(id)fp8 loadIfNotPresent:(BOOL)fp12;
+ (id)mailboxUidForMailboxID:(unsigned int)fp8 forceCreation:(BOOL)fp12;
+ (id)_mailboxUidForMailboxID:(unsigned int)fp8 forceCreation:(BOOL)fp12 usingReaderDB:(struct sqlite3 *)fp16;
+ (id)_getMailboxUidForMailboxID:(unsigned int)fp8 forceCreation:(BOOL)fp12 usingDB:(struct sqlite3 *)fp16;
+ (void)removeCachedMailboxUid:(id)fp8;
+ (unsigned int)mailboxIDForMailboxUid:(id)fp8;
+ (unsigned int)cachedMailboxIDForMailboxUid:(id)fp8;
+ (void)_setMailboxIDForMailboxUid:(id)fp8 to:(id)fp12;
+ (void)setMailboxIDForMailboxUid:(id)fp8 to:(id)fp12;
+ (unsigned int)toDoMailboxIdForMailAccountURLString:(id)fp8;
+ (unsigned int)toDoMailboxIdForMailAccount:(id)fp8;
+ (unsigned int)toDoMailboxIDForIncompleteMailAccount:(id)fp8;
+ (id)allToDoIDsAndRemoteIDsForMailboxID:(unsigned int)fp8;
+ (BOOL)addCalendars:(id)fp8;
+ (BOOL)updateCalendars:(id)fp8;
+ (BOOL)deleteCalendars:(id)fp8;
+ (id)allToDoCalendars;
+ (id)allUniqueToDoCalendars;
+ (BOOL)hasToDoWithIDBeenDeleted:(id)fp8;
+ (id)deletedToDoIDsForDocumentID:(id)fp8;
+ (unsigned int)maximumToDoRemoteIDForMailbox:(id)fp8;
+ (id)getDetailsForToDosWithRemoteIDInRange:(struct _NSRange)fp8 fromMailbox:(id)fp16;
+ (int)rowIdSequenceNumberForMessageNumber:(unsigned int)fp8;
+ (id)sqlSanitizeNSString:(id)fp8;
- (int)status;
- (void)setStatus:(int)fp8;
- (void)dealloc;

@end

